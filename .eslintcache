[{"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx":"1","/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts":"2","/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts":"3","/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx":"4","/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.ts":"5","/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-in-router.tsx":"6","/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-out-router.tsx":"7","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.ts":"8","/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts":"9","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx":"10","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx":"11","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx":"12","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurant.tsx":"13","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/search.tsx":"14","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx":"15","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx":"16","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/category.tsx":"17","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.restaurant.tsx":"18","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurant.tsx":"19","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/me.page.tsx":"20","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/password.page.tsx":"21","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/logout.tsx":"22","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx":"23","/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.ts":"24","/Users/pleed0215/Documents/mystudy/nuber_eats/src/fragments.ts":"25","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.ts":"26","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/helmet.onlytitle.tsx":"27","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx":"28","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurants.tsx":"29","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx":"30","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/categories.tsx":"31","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurant.item.tsx":"32","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/category.tsx":"33","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurants.tsx":"34","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.dish.tsx":"35","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/dish.item.tsx":"36","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/update.restaurant.tsx":"37","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/update.dish.tsx":"38"},{"size":929,"mtime":1608276074484,"results":"39","hashOfConfig":"40"},{"size":1112,"mtime":1608680711439,"results":"41","hashOfConfig":"40"},{"size":425,"mtime":1608276074485,"results":"42","hashOfConfig":"40"},{"size":401,"mtime":1608344743262,"results":"43","hashOfConfig":"40"},{"size":41,"mtime":1608276074483,"results":"44","hashOfConfig":"40"},{"size":3788,"mtime":1608790881487,"results":"45","hashOfConfig":"40"},{"size":582,"mtime":1608276074482,"results":"46","hashOfConfig":"40"},{"size":283,"mtime":1608276074484,"results":"47","hashOfConfig":"40"},{"size":1550,"mtime":1608790801783,"results":"48","hashOfConfig":"40"},{"size":650,"mtime":1608276074484,"results":"49","hashOfConfig":"40"},{"size":4686,"mtime":1608276074484,"results":"50","hashOfConfig":"40"},{"size":4171,"mtime":1608444609213,"results":"51","hashOfConfig":"40"},{"size":2968,"mtime":1608778228041,"results":"52","hashOfConfig":"40"},{"size":1930,"mtime":1608346952186,"results":"53","hashOfConfig":"40"},{"size":1310,"mtime":1608276074483,"results":"54","hashOfConfig":"40"},{"size":3065,"mtime":1608346939214,"results":"55","hashOfConfig":"40"},{"size":1516,"mtime":1608346926256,"results":"56","hashOfConfig":"40"},{"size":5164,"mtime":1608511761495,"results":"57","hashOfConfig":"40"},{"size":6458,"mtime":1608790838568,"results":"58","hashOfConfig":"40"},{"size":3905,"mtime":1608450998531,"results":"59","hashOfConfig":"40"},{"size":3156,"mtime":1608276074485,"results":"60","hashOfConfig":"40"},{"size":1005,"mtime":1608276074484,"results":"61","hashOfConfig":"40"},{"size":2496,"mtime":1608276074485,"results":"62","hashOfConfig":"40"},{"size":181,"mtime":1608276074485,"results":"63","hashOfConfig":"40"},{"size":1043,"mtime":1608701795339,"results":"64","hashOfConfig":"40"},{"size":127,"mtime":1608276074484,"results":"65","hashOfConfig":"40"},{"size":264,"mtime":1608276074483,"results":"66","hashOfConfig":"40"},{"size":363,"mtime":1608276074483,"results":"67","hashOfConfig":"40"},{"size":915,"mtime":1608276074483,"results":"68","hashOfConfig":"40"},{"size":167,"mtime":1608276074483,"results":"69","hashOfConfig":"40"},{"size":681,"mtime":1608276074483,"results":"70","hashOfConfig":"40"},{"size":1120,"mtime":1608685769263,"results":"71","hashOfConfig":"40"},{"size":803,"mtime":1608276074483,"results":"72","hashOfConfig":"40"},{"size":3150,"mtime":1608785968062,"results":"73","hashOfConfig":"40"},{"size":9356,"mtime":1608680677429,"results":"74","hashOfConfig":"40"},{"size":934,"mtime":1608685369572,"results":"75","hashOfConfig":"40"},{"size":4087,"mtime":1608790835345,"results":"76","hashOfConfig":"40"},{"size":8491,"mtime":1608791180157,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"16nv2t4",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx",[],["160","161"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-in-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-out-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurant.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/search.tsx",["162"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  QuerySearchByTerm,\n  QuerySearchByTermVariables,\n} from \"../../codegen/QuerySearchByTerm\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { Restaurants } from \"../../components/restaurants\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_SEARCH_BY_TERM = gql`\n  query QuerySearchByTerm($term: String!, $page: Int!) {\n    searchRestaurantByName(search: { query: $term, page: $page }) {\n      ok\n      error\n      totalPages\n      countTotalItems\n      restaurants {\n        ...RestaurantPart\n        category {\n          name\n          slug\n        }\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nexport const SearchPage: React.FC = () => {\n  const queryParam = useQueryParam();\n  const history = useHistory();\n  const [term, setTerm] = useState<string | null>(null);\n  const [queryReadyToStart, { loading, data }] = useLazyQuery<\n    QuerySearchByTerm,\n    QuerySearchByTermVariables\n  >(GQL_SEARCH_BY_TERM);\n\n  useEffect(() => {\n    const inputTerm = queryParam.get(\"term\");\n    if (!inputTerm) {\n      history.replace(\"/\");\n    } else {\n      queryReadyToStart({\n        variables: {\n          term: inputTerm,\n          page: 1,\n        },\n      });\n      setTerm(inputTerm);\n    }\n  }, [loading]);\n\n  return (\n    <div>\n      <HelmetOnlyTitle title={`Searching term: \"${term}\"`} />\n      <div className=\"w-full\">\n        {loading ? (\n          <h1>Loading...</h1>\n        ) : (\n          <Restaurants\n            restaurants={data?.searchRestaurantByName.restaurants}\n            categoryShow={true}\n            title={`Searching: \"${term}\" (Found: ${data?.searchRestaurantByName.countTotalItems})`}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/category.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.restaurant.tsx",["163","164"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  MutationCreateRestaurant,\n  MutationCreateRestaurantVariables,\n} from \"../../codegen/MutationCreateRestaurant\";\nimport { FormButtonInactivable } from \"../../components/form-button-inactivable\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport { GQL_MYRESTAURANTS } from \"./my.restaurants\";\n\nconst GQL_CREATE_RESTAURANT = gql`\n  mutation MutationCreateRestaurant($input: CreateRestaurantInput!) {\n    createRestaurant(input: $input) {\n      error\n      ok\n      restaurant {\n        ...RestaurantPart\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\ninterface IForm {\n  name: string;\n  address: string;\n  category: string;\n  file: FileList;\n}\n\nexport const CreateRestaurant = () => {\n  const history = useHistory();\n  const client = useApolloClient();\n\n  const [createRestaurant, { loading, data }] = useMutation<\n    MutationCreateRestaurant,\n    MutationCreateRestaurantVariables\n  >(GQL_CREATE_RESTAURANT, {\n    onCompleted: (data: MutationCreateRestaurant) => {\n      const { ok, error, restaurant } = data.createRestaurant;\n\n      if (ok) {\n        // faking cache\n        const currentQuery = client.readQuery({ query: GQL_MYRESTAURANTS });\n        const fakeData = currentQuery\n          ? {\n              myRestaurants: {\n                ...currentQuery?.myRestaurants,\n                count: currentQuery?.myRestaurants.count + 1,\n                restaurants: [\n                  {\n                    ...restaurant,\n                    __typename: \"Restaurant\",\n                  },\n                  ...currentQuery?.myRestaurants.restaurants,\n                ],\n              },\n            }\n          : {\n              myRestaurants: {\n                __typename: \"MyRestaurantOutput\",\n                ok: true,\n                error: null,\n                count: 1,\n                restaurants: {\n                  ...restaurant,\n                  __typename: \"Restaurant\",\n                },\n              },\n            };\n\n        client.writeQuery({\n          query: GQL_MYRESTAURANTS,\n          data: fakeData,\n        });\n\n        toast.success(\"Your restaurant is successfully made.\");\n      } else {\n        toast.error(\n          `Something is wrong while creating restaurant(Error: ${error})`\n        );\n      }\n      history.push(\"/\");\n    },\n  });\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState,\n    errors,\n  } = useForm<IForm>({\n    mode: \"onChange\",\n  });\n  const onSubmit = async () => {\n    try {\n      const { name, address, category: categoryName, file } = getValues();\n      const actualFile = file[0];\n      const formBody = new FormData();\n      formBody.append(\"file\", actualFile);\n      const { url: coverImage } = await (\n        await fetch(`http://lednas.synology.me:32789/upload/`, {\n          method: \"POST\",\n          body: formBody,\n        })\n      ).json();\n      createRestaurant({\n        variables: {\n          input: {\n            name,\n            address,\n            categoryName,\n            coverImage,\n          },\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"layout__container\">\n      <HelmetOnlyTitle title=\"Creating restaurant\" />\n      <h1 className=\"text-2xl font-semibold my-8\">CreateRestaurant</h1>\n      <form\n        className=\"auth__form\"\n        onSubmit={handleSubmit(onSubmit)}\n        encType=\"multipart/form-data\"\n      >\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            ref={register({ required: \"Name is required\" })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"text\"\n            placeholder=\"Address\"\n            name=\"address\"\n            ref={register({ required: \"Address is required\" })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"text\"\n            placeholder=\"Category\"\n            name=\"category\"\n            ref={register({ required: \"Category is required\" })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            ref={register({ required: true })}\n          />\n        </div>\n        <FormButtonInactivable\n          isActivate={formState.isValid && !formState.isSubmitting}\n          loading={loading}\n        >\n          Create Restaurant\n        </FormButtonInactivable>\n      </form>\n      {data?.createRestaurant.error && (\n        <p className=\"auth__form_error\">{data.createRestaurant.error}</p>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurant.tsx",["165","166","167","168","169","170"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/me.page.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/password.page.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/logout.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx",["171"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  MutationVerifyCode,\n  MutationVerifyCodeVariables,\n} from \"../../codegen/MutationVerifyCode\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { useMe } from \"../../hooks/useMe\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_VERIFICATION = gql`\n  mutation MutationVerifyCode($code: String!) {\n    verifyCode(code: $code) {\n      ok\n      error\n    }\n  }\n`;\n\n/* Todo:\n    add sendVerification mutation on backend.\n*/\n\nexport const VerificationPage = () => {\n  const history = useHistory();\n  const onVerifyCompleted = (data: MutationVerifyCode) => {\n    const {\n      verifyCode: { ok },\n    } = data;\n\n    if (ok && userData?.me?.id) {\n      client.writeFragment({\n        id: `User:${userData?.me?.id}`,\n        fragment: gql`\n          fragment VerifiedUser on User {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      toast.success(\"Success to comfirm your verification.\");\n      setTimeout(() => history.push(\"/\"), 2000);\n    } else {\n      toast.error(\"Verification of your email address is not valid.\");\n    }\n  };\n  const [verifyCode, { loading, data, error }] = useMutation<\n    MutationVerifyCode,\n    MutationVerifyCodeVariables\n  >(GQL_VERIFICATION, { onCompleted: onVerifyCompleted });\n\n  const queryParam = useQueryParam();\n  const client = useApolloClient();\n  const { data: userData } = useMe();\n\n  useEffect(() => {\n    const code = queryParam.get(\"code\");\n\n    if (code) {\n      verifyCode({\n        variables: {\n          code,\n        },\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\n      <HelmetOnlyTitle title=\"Verifying your email address\" />\n      {loading ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Confirming your verification.. Please wait..\n        </h1>\n      ) : !error && data?.verifyCode.ok ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Your verification is confirmed. Please log in.\n        </h1>\n      ) : (\n        <div>\n          <h1 className=\"text-lg mb-2 font-medium\">\n            Couldn't confirm your email verification.\n          </h1>\n          <p>Message: {data?.verifyCode.error} </p>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.ts",["172","173"],"export const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/fragments.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/helmet.onlytitle.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/categories.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurant.item.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/category.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.dish.tsx",["174","175","176","177","178"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { useFieldArray, useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { DishChoiceType, DishOptionType } from \"../../codegen/globalTypes\";\nimport {\n  MutationCreateDish,\n  MutationCreateDishVariables,\n  MutationCreateDish_createDish_dish_options,\n} from \"../../codegen/MutationCreateDish\";\nimport {\n  QueryMyRestaurant,\n  QueryMyRestaurant_restaurant_restaurant_dishes,\n} from \"../../codegen/QueryMyRestaurant\";\nimport { FormButtonInactivable } from \"../../components/form-button-inactivable\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { DISH_FRAGMENT } from \"../../fragments\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\nimport { GQL_MYRESTAURANT } from \"./my.restaurant\";\nimport { GQL_MYRESTAURANTS } from \"./my.restaurants\";\n\nconst GQL_CREATE_DISH = gql`\n  mutation MutationCreateDish($input: CreateDishInput!) {\n    createDish(input: $input) {\n      ok\n      error\n      dish {\n        ...DishPart\n      }\n    }\n  }\n  ${DISH_FRAGMENT}\n`;\n\ninterface IChoice {\n  name: string;\n  extra: number;\n}\n\ninterface IOptions {\n  name: string;\n  extra: number;\n  choices?: IChoice[] | null;\n}\ninterface ICreateDishForm {\n  name: string;\n  price: number;\n  description: string;\n  file: FileList;\n  options: IOptions[];\n}\n\ninterface IParams {\n  id: string;\n}\n\nexport const CreateDish: React.FC = () => {\n  const client = useApolloClient();\n  const history = useHistory();\n\n  const [createDish, { loading, data, error }] = useMutation<\n    MutationCreateDish,\n    MutationCreateDishVariables\n  >(GQL_CREATE_DISH, {\n    onCompleted: (data: MutationCreateDish) => {\n      if (data.createDish.ok) {\n        const currentRestaurant = client.readQuery<QueryMyRestaurant>({\n          query: GQL_MYRESTAURANT,\n          variables: {\n            id: +restaurantId,\n          },\n        });\n        let dishes: QueryMyRestaurant_restaurant_restaurant_dishes[] = [];\n        if (currentRestaurant?.restaurant.restaurant?.dishes)\n          dishes = currentRestaurant?.restaurant.restaurant?.dishes;\n        client.writeQuery({\n          query: GQL_MYRESTAURANT,\n          data: {\n            restaurant: {\n              ...currentRestaurant?.restaurant,\n              restaurant: {\n                ...currentRestaurant?.restaurant.restaurant,\n                dishes: [data.createDish.dish, ...dishes],\n              },\n            },\n          },\n          variables: {\n            id: +restaurantId,\n          },\n        });\n        toast.success(\"Dish successfully made.\");\n        history.goBack();\n      } else {\n        toast.error(\n          `While creating menu, an error occured. Message: ${data.createDish.error}`\n        );\n      }\n    },\n  });\n  const {\n    register,\n    formState,\n    handleSubmit,\n    getValues,\n    control,\n    errors,\n  } = useForm<ICreateDishForm>({\n    mode: \"onChange\",\n  });\n  const {\n    fields: optionFields,\n    append: appendOption,\n    remove: removeOption,\n  } = useFieldArray({\n    control,\n    name: \"options\",\n  });\n\n  const { id: restaurantId } = useParams<IParams>();\n  const onSubmit = async () => {\n    try {\n      const { name, price, description, file, options } = getValues();\n      const dishOptions: DishOptionType[] = [];\n      const actualFile = file[0];\n      const formBody = new FormData();\n      formBody.append(\"file\", actualFile);\n      options?.forEach((option) => {\n        const dishChoices: DishChoiceType[] | null = option?.choices\n          ? []\n          : null;\n\n        if (dishChoices) {\n          option?.choices?.forEach((choice) => {\n            dishChoices.push({\n              name: choice.name,\n              extra: +choice.extra,\n            });\n          });\n        }\n\n        dishOptions.push({\n          name: option.name,\n          extra: +option.extra,\n        });\n      });\n      const { url: photo } = await (\n        await fetch(`http://lednas.synology.me:32789/upload/`, {\n          method: \"POST\",\n          body: formBody,\n        })\n      ).json();\n\n      await createDish({\n        variables: {\n          input: {\n            name,\n            description,\n            price: +price,\n            photo,\n            restaurantId: +restaurantId,\n            options: dishOptions,\n          },\n        },\n      });\n      history.goBack();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onAddClicked = () => {\n    appendOption({\n      value: \"\",\n    });\n  };\n  const onDeleteClicked = (index) => {\n    // @ts-ignore\n    removeOption(index);\n  };\n\n  return (\n    <div className=\"layout__container\">\n      <HelmetOnlyTitle title=\"Creating dish\" />\n      <h1 className=\"text-2xl font-semibold my-8\">Create Dish</h1>\n      <form\n        className=\"auth__form\"\n        onSubmit={handleSubmit(onSubmit)}\n        encType=\"multipart/form-data\"\n      >\n        <p className=\"text-xl italic text-black mb-2\">\n          Write dish information here.\n        </p>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            ref={register({ required: \"Name is required\" })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"number\"\n            placeholder=\"Price\"\n            name=\"price\"\n            ref={register({\n              required: \"Price is required\",\n              min: { value: 0, message: \"Price must be over 0\" },\n            })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className={`auth__form_input ${\n              errors.description && \"border-red-500\"\n            }`}\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            ref={register({\n              required: \"Category is required\",\n              minLength: 5,\n            })}\n          />\n          {errors.description && (\n            <span className=\"auth__form_error\">\n              {errors.description.message}\n            </span>\n          )}\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <label htmlFor=\"file\" className=\"text-md italic self-start mb-1\">\n            Dish image\n          </label>\n          <input\n            className=\"auth__form_input\"\n            id=\"file\"\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            ref={register({ required: true })}\n          />\n        </div>\n        <div className=\"border-t border-gray-600 mt-2 pt-2\">\n          <p className=\"text-xl italic\">Dish options</p>\n          <span\n            onClick={() => onAddClicked()}\n            className=\"auth__form_button inline-block mb-2 cursor-pointer\"\n          >\n            Add Option\n          </span>\n          <div className=\"mb-2\">\n            {optionFields.length === 0 ? (\n              <div>\n                <p className=\"text-sm font-thin text-black\">\n                  No options now. Click above button if you need one.\n                </p>\n              </div>\n            ) : (\n              <div>\n                {optionFields.map((field, index) => (\n                  <div\n                    key={field.id}\n                    className=\"border border-gray-500 p-5 mb-2\"\n                  >\n                    <span className=\"inline-block mb-2 mr-4\">\n                      {`#${index + 1} Option`}\n                    </span>\n                    <span\n                      className=\"cursor-pointer text-xs py-1 px-2 bg-red-300 text-red-600 rounded-md hover:bg-red-600 hover:text-red-300 transition duration-200\"\n                      onClick={() => onDeleteClicked(index)}\n                    >\n                      Delete me\n                    </span>\n                    <div className=\"flex justify-around\">\n                      <div className=\"auth__input_wrapper w-full mr-3\">\n                        <input\n                          className=\"auth__form_input\"\n                          type=\"text\"\n                          name={`options[${index}].name`}\n                          placeholder=\"Name\"\n                          ref={register({ required: true })}\n                        />\n                      </div>\n                      <div className=\"auth__input_wrapper w-full\">\n                        <input\n                          className=\"auth__form_input\"\n                          type=\"number\"\n                          name={`options[${index}].extra`}\n                          placeholder=\"Extra\"\n                          ref={register({ required: true, min: 0 })}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        <FormButtonInactivable\n          isActivate={formState.isValid && !formState.isSubmitting}\n          loading={loading}\n        >\n          Create Dish\n        </FormButtonInactivable>\n      </form>\n      {data?.createDish.error && (\n        <p className=\"auth__form_error\">{data.createDish.error}</p>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/dish.item.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/update.restaurant.tsx",["179","180","181","182","183","184"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/update.dish.tsx",["185","186","187","188","189","190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":54,"column":6,"nodeType":"197","endLine":54,"endColumn":15,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":2,"column":17,"nodeType":"201","messageId":"202","endLine":2,"endColumn":25},{"ruleId":"199","severity":1,"message":"203","line":96,"column":5,"nodeType":"201","messageId":"202","endLine":96,"endColumn":11},{"ruleId":"199","severity":1,"message":"204","line":5,"column":3,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"205","line":6,"column":3,"nodeType":"201","messageId":"202","endLine":6,"endColumn":17},{"ruleId":"199","severity":1,"message":"206","line":10,"column":17,"nodeType":"201","messageId":"202","endLine":10,"endColumn":26},{"ruleId":"199","severity":1,"message":"207","line":25,"column":3,"nodeType":"201","messageId":"202","endLine":25,"endColumn":13},{"ruleId":"199","severity":1,"message":"208","line":27,"column":3,"nodeType":"201","messageId":"202","endLine":27,"endColumn":13},{"ruleId":"199","severity":1,"message":"209","line":31,"column":3,"nodeType":"201","messageId":"202","endLine":31,"endColumn":15},{"ruleId":"195","severity":1,"message":"210","line":71,"column":6,"nodeType":"197","endLine":71,"endColumn":8,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":1,"column":38,"nodeType":"214","messageId":"215","endLine":1,"endColumn":39,"suggestions":"216"},{"ruleId":"212","severity":1,"message":"213","line":1,"column":63,"nodeType":"214","messageId":"215","endLine":1,"endColumn":64,"suggestions":"217"},{"ruleId":"199","severity":1,"message":"200","line":2,"column":17,"nodeType":"201","messageId":"202","endLine":2,"endColumn":25},{"ruleId":"199","severity":1,"message":"218","line":10,"column":3,"nodeType":"201","messageId":"202","endLine":10,"endColumn":45},{"ruleId":"199","severity":1,"message":"219","line":19,"column":10,"nodeType":"201","messageId":"202","endLine":19,"endColumn":23},{"ruleId":"199","severity":1,"message":"220","line":21,"column":10,"nodeType":"201","messageId":"202","endLine":21,"endColumn":27},{"ruleId":"199","severity":1,"message":"221","line":62,"column":39,"nodeType":"201","messageId":"202","endLine":62,"endColumn":44},{"ruleId":"199","severity":1,"message":"222","line":1,"column":15,"nodeType":"201","messageId":"202","endLine":1,"endColumn":30},{"ruleId":"199","severity":1,"message":"223","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":15},{"ruleId":"199","severity":1,"message":"224","line":16,"column":10,"nodeType":"201","messageId":"202","endLine":16,"endColumn":25},{"ruleId":"199","severity":1,"message":"225","line":19,"column":10,"nodeType":"201","messageId":"202","endLine":19,"endColumn":29},{"ruleId":"199","severity":1,"message":"226","line":56,"column":5,"nodeType":"201","messageId":"202","endLine":56,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":58,"column":5,"nodeType":"201","messageId":"202","endLine":58,"endColumn":11},{"ruleId":"199","severity":1,"message":"200","line":2,"column":17,"nodeType":"201","messageId":"202","endLine":2,"endColumn":25},{"ruleId":"199","severity":1,"message":"219","line":16,"column":10,"nodeType":"201","messageId":"202","endLine":16,"endColumn":23},{"ruleId":"199","severity":1,"message":"220","line":18,"column":10,"nodeType":"201","messageId":"202","endLine":18,"endColumn":27},{"ruleId":"199","severity":1,"message":"227","line":68,"column":9,"nodeType":"201","messageId":"202","endLine":68,"endColumn":15},{"ruleId":"199","severity":1,"message":"228","line":72,"column":17,"nodeType":"201","messageId":"202","endLine":72,"endColumn":31},{"ruleId":"199","severity":1,"message":"221","line":81,"column":39,"nodeType":"201","messageId":"202","endLine":81,"endColumn":44},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'queryParam', and 'queryReadyToStart'. Either include them or remove the dependency array.","ArrayExpression",["231"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","'faRecycle' is defined but never used.","'faRemoveFormat' is defined but never used.","'useEffect' is defined but never used.","'VictoryBar' is defined but never used.","'VictoryPie' is defined but never used.","'VictoryLabel' is defined but never used.","React Hook useEffect has missing dependencies: 'queryParam' and 'verifyCode'. Either include them or remove the dependency array.",["232"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["233","234"],["235","236"],"'MutationCreateDish_createDish_dish_options' is defined but never used.","'useQueryParam' is defined but never used.","'GQL_MYRESTAURANTS' is defined but never used.","'error' is assigned a value but never used.","'useApolloClient' is defined but never used.","'reset' is defined but never used.","'QueryRestaurant' is defined but never used.","'RESTAURANT_FRAGMENT' is defined but never used.","'setValue' is assigned a value but never used.","'client' is assigned a value but never used.","'restaurantData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"messageId":"241","fix":"242","desc":"243"},{"messageId":"244","fix":"245","desc":"246"},{"messageId":"241","fix":"247","desc":"243"},{"messageId":"244","fix":"248","desc":"246"},"Update the dependencies array to be: [history, loading, queryParam, queryReadyToStart]",{"range":"249","text":"250"},"Update the dependencies array to be: [queryParam, verifyCode]",{"range":"251","text":"252"},"removeEscape",{"range":"253","text":"254"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"255","text":"256"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"257","text":"254"},{"range":"258","text":"256"},[1460,1469],"[history, loading, queryParam, queryReadyToStart]",[1800,1802],"[queryParam, verifyCode]",[37,38],"",[37,37],"\\",[62,63],[62,62]]