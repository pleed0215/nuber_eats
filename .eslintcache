[{"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx":"1","/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts":"2","/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts":"3","/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx":"4","/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.ts":"5","/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-out-router.tsx":"6","/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-in-router.tsx":"7","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.ts":"8","/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts":"9","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx":"10","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx":"11","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx":"12","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx":"13","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/category.tsx":"14","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/search.tsx":"15","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx":"16","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.dish.tsx":"17","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/update.restaurant.tsx":"18","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurant.tsx":"19","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurants.tsx":"20","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/password.page.tsx":"21","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx":"22","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/logout.tsx":"23","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/me.page.tsx":"24","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.restaurant.tsx":"25","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurant.tsx":"26","/Users/pleed0215/Documents/mystudy/nuber_eats/src/fragments.ts":"27","/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.ts":"28","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.ts":"29","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx":"30","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurants.tsx":"31","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/helmet.onlytitle.tsx":"32","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/categories.tsx":"33","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx":"34","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurant.item.tsx":"35","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/dish.item.tsx":"36","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/cart.icon.tsx":"37","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/category.tsx":"38","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/order.tsx":"39","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/driver/dashboard.tsx":"40","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/my.page.tsx":"41","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/loader.tsx":"42"},{"size":980,"mtime":1610757528561,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":1608276074485,"results":"45","hashOfConfig":"44"},{"size":2088,"mtime":1609564185193,"results":"46","hashOfConfig":"44"},{"size":401,"mtime":1608344743262,"results":"47","hashOfConfig":"44"},{"size":228,"mtime":1610757487189,"results":"48","hashOfConfig":"44"},{"size":582,"mtime":1608276074482,"results":"49","hashOfConfig":"44"},{"size":4529,"mtime":1610755659086,"results":"50","hashOfConfig":"44"},{"size":283,"mtime":1608276074484,"results":"51","hashOfConfig":"44"},{"size":1879,"mtime":1610760523761,"results":"52","hashOfConfig":"44"},{"size":4704,"mtime":1609542822429,"results":"53","hashOfConfig":"44"},{"size":650,"mtime":1608276074484,"results":"54","hashOfConfig":"44"},{"size":4171,"mtime":1608444609213,"results":"55","hashOfConfig":"44"},{"size":1315,"mtime":1610672091660,"results":"56","hashOfConfig":"44"},{"size":1652,"mtime":1610761167436,"results":"57","hashOfConfig":"44"},{"size":1930,"mtime":1608346952186,"results":"58","hashOfConfig":"44"},{"size":3354,"mtime":1610761239468,"results":"59","hashOfConfig":"44"},{"size":17670,"mtime":1610756426433,"results":"60","hashOfConfig":"44"},{"size":3890,"mtime":1609553291510,"results":"61","hashOfConfig":"44"},{"size":7009,"mtime":1610672091662,"results":"62","hashOfConfig":"44"},{"size":3230,"mtime":1610757488573,"results":"63","hashOfConfig":"44"},{"size":3156,"mtime":1608276074485,"results":"64","hashOfConfig":"44"},{"size":2496,"mtime":1608276074485,"results":"65","hashOfConfig":"44"},{"size":724,"mtime":1610673467411,"results":"66","hashOfConfig":"44"},{"size":3905,"mtime":1608450998531,"results":"67","hashOfConfig":"44"},{"size":5157,"mtime":1609545754241,"results":"68","hashOfConfig":"44"},{"size":17963,"mtime":1610761786328,"results":"69","hashOfConfig":"44"},{"size":1405,"mtime":1609208445756,"results":"70","hashOfConfig":"44"},{"size":179,"mtime":1610672091664,"results":"71","hashOfConfig":"44"},{"size":127,"mtime":1608276074484,"results":"72","hashOfConfig":"44"},{"size":167,"mtime":1608276074483,"results":"73","hashOfConfig":"44"},{"size":915,"mtime":1608276074483,"results":"74","hashOfConfig":"44"},{"size":264,"mtime":1608276074483,"results":"75","hashOfConfig":"44"},{"size":699,"mtime":1609560531120,"results":"76","hashOfConfig":"44"},{"size":424,"mtime":1610761379203,"results":"77","hashOfConfig":"44"},{"size":1128,"mtime":1610759369743,"results":"78","hashOfConfig":"44"},{"size":1052,"mtime":1608958996712,"results":"79","hashOfConfig":"44"},{"size":889,"mtime":1610761694295,"results":"80","hashOfConfig":"44"},{"size":803,"mtime":1608276074483,"results":"81","hashOfConfig":"44"},{"size":6273,"mtime":1610672088435,"results":"82","hashOfConfig":"44"},{"size":5421,"mtime":1609543177956,"results":"83","hashOfConfig":"44"},{"size":2584,"mtime":1610672091662,"results":"84","hashOfConfig":"44"},{"size":428,"mtime":1610761464787,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"16nv2t4",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx",[],["179","180"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-out-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-in-router.tsx",["181"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { UserRole } from \"../codegen/globalTypes\";\nimport { Header } from \"../components/header\";\nimport { useMe } from \"../hooks/useMe\";\nimport { NotFound } from \"../pages/404\";\nimport { CategoryPage } from \"../pages/client/category\";\nimport { Restaurant } from \"../pages/client/restaurant\";\nimport { RestaurantsPage } from \"../pages/client/restaurants\";\nimport { SearchPage } from \"../pages/client/search\";\nimport { CreateRestaurant } from \"../pages/restaurant/create.restaurant\";\nimport { MyRestaurants } from \"../pages/restaurant/my.restaurants\";\nimport { MyRestaurant } from \"../pages/restaurant/my.restaurant\";\nimport { LogOutPage } from \"../pages/user/logout\";\nimport { EditProfile } from \"../pages/user/me.page\";\nimport { UpdatePassword } from \"../pages/user/password.page\";\nimport { VerificationPage } from \"../pages/user/verification.page\";\nimport { CreateDish } from \"../pages/restaurant/create.dish\";\nimport { UpdateRestaurant } from \"../pages/restaurant/update.restaurant\";\n\nimport { Order } from \"../pages/order\";\nimport { DashBoard } from \"../pages/driver/dashboard\";\nimport { MyPage } from \"../pages/my.page\";\nimport { TOKEN_NAME } from \"../gloabl.constant\";\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\nimport { useApolloClient } from \"@apollo/client\";\n\ninterface IRouteItem {\n  path: string;\n  component: React.FC;\n  exact?: boolean;\n}\n\nconst clientRoutes: IRouteItem[] = [\n  {\n    path: \"/\",\n    component: RestaurantsPage,\n    exact: true,\n  },\n  {\n    path: \"/search\",\n    component: SearchPage,\n  },\n  {\n    path: \"/category/:slug\",\n    component: CategoryPage,\n  },\n  {\n    path: \"/restaurant/:id\",\n    component: Restaurant,\n  },\n];\n\nconst ownerRoutes: IRouteItem[] = [\n  {\n    path: \"/\",\n    component: MyRestaurants,\n    exact: true,\n  },\n  {\n    path: \"/create-restaurant\",\n    component: CreateRestaurant,\n  },\n  {\n    path: \"/my-restaurant/:restaurantId/:dishId/update\",\n    component: CreateDish,\n    exact: true,\n  },\n  {\n    path: \"/my-restaurant/:restaurantId/create-dish\",\n    component: CreateDish,\n  },\n  {\n    path: \"/my-restaurant/:id/update\",\n    component: UpdateRestaurant,\n  },\n  {\n    path: \"/my-restaurant/:id\",\n    component: MyRestaurant,\n  },\n];\n\nconst driversRoutes: IRouteItem[] = [{ path: \"/\", component: DashBoard }];\n\nconst commonRoutes: IRouteItem[] = [\n  {\n    path: \"/verification\",\n    component: VerificationPage,\n  },\n  {\n    path: \"/me\",\n    component: EditProfile,\n  },\n  {\n    path: \"/password\",\n    component: UpdatePassword,\n  },\n  {\n    path: \"/logout\",\n    component: LogOutPage,\n  },\n  {\n    path: \"/orders/:id\",\n    component: Order,\n  },\n  {\n    path: \"/my-page\",\n    component: MyPage,\n  },\n];\n\nexport const LoggedInRouter = () => {\n  const { data, loading, error } = useMe();\n  const client = useApolloClient();\n\n  if (loading) {\n    return (\n      <div className=\"h-screen flex justify-center items-center\">\n        <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\n      </div>\n    );\n  }\n\n  if (!loading && error) {\n    localStorage.removeItem(TOKEN_NAME);\n    isLoggedInVar(false);\n    authTokenVar(null);\n    client.cache.reset();\n  }\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        {commonRoutes.map((route) => (\n          <Route\n            key={route.path}\n            path={route.path}\n            exact={Boolean(route.exact)}\n          >\n            <route.component />\n          </Route>\n        ))}\n        {data?.me?.role === UserRole.Client &&\n          clientRoutes.map((route) => (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact={Boolean(route.exact)}\n            >\n              <route.component />\n            </Route>\n          ))}\n        {data?.me?.role === UserRole.Owner &&\n          ownerRoutes.map((route) => (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact={Boolean(route.exact)}\n            >\n              <route.component />\n            </Route>\n          ))}\n        {data?.me?.role === UserRole.Delivery &&\n          driversRoutes.map((route) => (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact={Boolean(route.exact)}\n            >\n              <route.component />\n            </Route>\n          ))}\n\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/category.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/search.tsx",["182"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  QuerySearchByTerm,\n  QuerySearchByTermVariables,\n} from \"../../codegen/QuerySearchByTerm\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { Restaurants } from \"../../components/restaurants\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_SEARCH_BY_TERM = gql`\n  query QuerySearchByTerm($term: String!, $page: Int!) {\n    searchRestaurantByName(search: { query: $term, page: $page }) {\n      ok\n      error\n      totalPages\n      countTotalItems\n      restaurants {\n        ...RestaurantPart\n        category {\n          name\n          slug\n        }\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nexport const SearchPage: React.FC = () => {\n  const queryParam = useQueryParam();\n  const history = useHistory();\n  const [term, setTerm] = useState<string | null>(null);\n  const [queryReadyToStart, { loading, data }] = useLazyQuery<\n    QuerySearchByTerm,\n    QuerySearchByTermVariables\n  >(GQL_SEARCH_BY_TERM);\n\n  useEffect(() => {\n    const inputTerm = queryParam.get(\"term\");\n    if (!inputTerm) {\n      history.replace(\"/\");\n    } else {\n      queryReadyToStart({\n        variables: {\n          term: inputTerm,\n          page: 1,\n        },\n      });\n      setTerm(inputTerm);\n    }\n  }, [loading]);\n\n  return (\n    <div>\n      <HelmetOnlyTitle title={`Searching term: \"${term}\"`} />\n      <div className=\"w-full\">\n        {loading ? (\n          <h1>Loading...</h1>\n        ) : (\n          <Restaurants\n            restaurants={data?.searchRestaurantByName.restaurants}\n            categoryShow={true}\n            title={`Searching: \"${term}\" (Found: ${data?.searchRestaurantByName.countTotalItems})`}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.dish.tsx",["183","184","185","186","187"],"import {\n  gql,\n  useApolloClient,\n  useLazyQuery,\n  useMutation,\n  useQuery,\n} from \"@apollo/client\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useFieldArray, useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { DishChoiceType, DishOptionType } from \"../../codegen/globalTypes\";\nimport {\n  MutationCreateDish,\n  MutationCreateDishVariables,\n} from \"../../codegen/MutationCreateDish\";\nimport { QueryDish } from \"../../codegen/QueryDish\";\nimport {\n  QueryMyRestaurant,\n  QueryMyRestaurant_restaurant_restaurant_dishes,\n  QueryMyRestaurant_restaurant_restaurant_dishes_options_choices,\n} from \"../../codegen/QueryMyRestaurant\";\nimport { FormButtonInactivable } from \"../../components/form-button-inactivable\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { DISH_FRAGMENT } from \"../../fragments\";\nimport { BASE_URL } from \"../../gloabl.constant\";\nimport { GQL_MYRESTAURANT } from \"./my.restaurant\";\n\nconst GQL_CREATE_DISH = gql`\n  mutation MutationCreateDish($input: CreateDishInput!) {\n    createDish(input: $input) {\n      ok\n      error\n      dish {\n        ...DishPart\n      }\n    }\n  }\n  ${DISH_FRAGMENT}\n`;\n\nconst GQL_DISH = gql`\n  query QueryDish($id: Int!) {\n    getDish(dishId: $id) {\n      ok\n      error\n      dish {\n        ...DishPart\n      }\n    }\n  }\n  ${DISH_FRAGMENT}\n`;\n\ninterface IChoice {\n  name: string;\n  extra: number;\n  isRemoved: boolean;\n}\n\ninterface IOptions {\n  name: string;\n  extra: number;\n  choice?: IChoice[] | null;\n}\ninterface ICreateDishForm {\n  name: string;\n  price: number;\n  description: string;\n  file: FileList;\n  options: IOptions[];\n}\n\ninterface IParams {\n  restaurantId: string;\n  dishId: string;\n}\n\ninterface IChoiceInfo {\n  index: string;\n  isExist: boolean;\n  choice: IChoice;\n}\n\ninterface IChoiceInput {\n  optionIndex: number;\n  choicesInfo: IChoiceInfo[] | null;\n}\n\ninterface INestedChoice {\n  register: any;\n  control: any;\n  field: any;\n  namePrefix: any;\n  choices?:\n    | QueryMyRestaurant_restaurant_restaurant_dishes_options_choices[]\n    | null;\n}\n\nconst NestedChoice: React.FC<INestedChoice> = ({\n  register,\n  control,\n  field,\n  choices,\n  namePrefix,\n}) => {\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: namePrefix,\n  });\n\n  useMemo(\n    () =>\n      choices?.forEach((choice) =>\n        append({ name: choice.name, extra: choice.extra })\n      ),\n    [choices]\n  );\n\n  return (\n    <div className=\"w-full\">\n      <span\n        className=\"cursor-pointer text-xs py-1 px-2 bg-lime-300 text-lime-600 rounded-md hover:bg-lime-600 hover:text-lime-300 transition duration-200 mr-4\"\n        onClick={() => append({ name: \"\", extra: 0 })}\n      >\n        Add choice\n      </span>\n      {fields.map((choice, choiceIndex) => (\n        <div key={choice.id} className=\"flex justify-around items-center mt-2\">\n          <div className=\"w-1/6\">\n            <span>Choice #{choiceIndex + 1}</span>\n          </div>\n          <div className=\"w-2/6 mr-3\">\n            <input\n              className=\"auth__form_input\"\n              type=\"text\"\n              name={`${namePrefix}[${choiceIndex}].name`}\n              placeholder=\"Name\"\n              defaultValue={`${choice.name}`}\n              ref={register({ required: true })}\n            />\n          </div>\n          <div className=\" w-2/6\">\n            <input\n              className=\"auth__form_input\"\n              type=\"number\"\n              name={`${namePrefix}[${choiceIndex}].extra`}\n              placeholder=\"Extra\"\n              defaultValue={`${choice.extra}`}\n              ref={register({ required: true, min: 0 })}\n            />\n          </div>\n          <div\n            onClick={() => remove(choiceIndex)}\n            className=\"cursor-pointer text-xs px-2 py-1 text-center bg-red-300 text-red-600 rounded-md hover:bg-red-600 hover:text-red-300 transition duration-200 ml-3\"\n          >\n            <FontAwesomeIcon icon={faTrashAlt} />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport const CreateDish: React.FC = () => {\n  const client = useApolloClient();\n  const history = useHistory();\n\n  const { restaurantId, dishId } = useParams<IParams>();\n\n  const [\n    updateDish,\n    { data: dishData, loading: dishLoading },\n  ] = useLazyQuery<QueryDish>(GQL_DISH, {\n    onCompleted: (data: QueryDish) => {\n      setValue(\"name\", dishData.getDish.dish.name);\n      setValue(\"description\", dishData.getDish.dish.description);\n      setValue(\"price\", dishData.getDish.dish.price);\n      dishData.getDish.dish.options.forEach((option) => {\n        appendOption({ name: option.name, extra: option.extra });\n      });\n\n      console.log(dishData.getDish.dish);\n    },\n  });\n\n  useEffect(() => {\n    if (dishId) {\n      updateDish({\n        variables: {\n          id: +dishId,\n        },\n      });\n    }\n  }, []);\n\n  const [createDish, { loading, data }] = useMutation<\n    MutationCreateDish,\n    MutationCreateDishVariables\n  >(GQL_CREATE_DISH, {\n    onCompleted: (data: MutationCreateDish) => {\n      if (data.createDish.ok) {\n        const currentRestaurant = client.readQuery<QueryMyRestaurant>({\n          query: GQL_MYRESTAURANT,\n          variables: {\n            id: +restaurantId,\n          },\n        });\n        let dishes: QueryMyRestaurant_restaurant_restaurant_dishes[] = [];\n        if (currentRestaurant?.restaurant.restaurant?.dishes)\n          dishes = currentRestaurant?.restaurant.restaurant?.dishes;\n        client.writeQuery({\n          query: GQL_MYRESTAURANT,\n          data: {\n            restaurant: {\n              ...currentRestaurant?.restaurant,\n              restaurant: {\n                ...currentRestaurant?.restaurant.restaurant,\n                dishes: [data.createDish.dish, ...dishes],\n              },\n            },\n          },\n          variables: {\n            id: +restaurantId,\n          },\n        });\n        toast.success(\"Dish successfully made.\");\n        history.goBack();\n      } else {\n        toast.error(\n          `While creating menu, an error occured. Message: ${data.createDish.error}`\n        );\n      }\n    },\n  });\n  const {\n    register,\n    formState,\n    handleSubmit,\n    getValues,\n    setValue,\n    control,\n    errors,\n  } = useForm<ICreateDishForm>({\n    mode: \"onChange\",\n  });\n  const {\n    fields: optionFields,\n    append: appendOption,\n    remove: removeOption,\n  } = useFieldArray({\n    control,\n    name: \"options\",\n  });\n\n  const onSubmit = async () => {\n    try {\n      const { name, price, description, file, options } = getValues();\n      const dishOptions: DishOptionType[] = [];\n      const actualFile = file[0];\n      const formBody = new FormData();\n\n      formBody.append(\"file\", actualFile);\n\n      options?.forEach((option) => {\n        const dishChoices: DishChoiceType[] | null = option?.choice ? [] : null;\n\n        option?.choice?.forEach((choice) => {\n          dishChoices?.push({\n            name: choice.name,\n            extra: +choice.extra,\n          });\n        });\n\n        dishOptions.push({\n          name: option.name,\n          extra: +option.extra,\n          choices: dishChoices,\n        });\n      });\n\n      const { url: photo } = await (\n        await fetch(`https://${BASE_URL}/upload/`, {\n          method: \"POST\",\n          body: formBody,\n        })\n      ).json();\n      await createDish({\n        variables: {\n          input: {\n            name,\n            description,\n            price: +price,\n            photo,\n            restaurantId: +restaurantId,\n            options: dishOptions,\n          },\n        },\n      });\n\n      history.goBack();\n    } catch (error) {\n      toast.error(\n        `Some error while creating dish with error: ${error.message}`\n      );\n      history.push(\"/\");\n    }\n  };\n\n  const onAddClicked = () => {\n    appendOption({ value: \"afaf\" });\n  };\n  const onDeleteClicked = (index) => {\n    // @ts-ignore\n    removeOption(index);\n  };\n\n  if (dishId && dishLoading) {\n    return (\n      <div className=\"layout__container flex justify-center items-center text-2xl\">\n        <HelmetOnlyTitle title=\"Creating dish\" />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"layout__container\">\n      <HelmetOnlyTitle title=\"Creating dish\" />\n      <h1 className=\"text-2xl font-semibold my-8\">\n        {dishData ? \"Update Dish\" : \"Create Dish\"}\n      </h1>\n      {/* Main form start. \n          Must implment double nested input.\n          Ex) Dish > Choices \n      */}\n      <form\n        className=\"auth__form\"\n        onSubmit={handleSubmit(onSubmit)}\n        encType=\"multipart/form-data\"\n      >\n        <p className=\"text-xl italic text-black mb-2\">\n          Write dish information here.(Many bugs are here. To be fixed.)\n        </p>\n        {/* Dish information. Name, Price, Description */}\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            ref={register({ required: \"Name is required\" })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"number\"\n            placeholder=\"Price\"\n            name=\"price\"\n            ref={register({\n              required: \"Price is required\",\n              min: { value: 0, message: \"Price must be over 0\" },\n            })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className={`auth__form_input ${\n              errors.description && \"border-red-500\"\n            }`}\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            ref={register({\n              required: \"Category is required\",\n              minLength: 5,\n            })}\n          />\n          {errors.description && (\n            <span className=\"auth__form_error\">\n              {errors.description.message}\n            </span>\n          )}\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <label htmlFor=\"file\" className=\"text-md italic self-start mb-1\">\n            Dish image\n          </label>\n          <input\n            className=\"auth__form_input\"\n            id=\"file\"\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            ref={register({ required: true })}\n          />\n        </div>\n        {/* Starting Option part. Must be dynamic field. It is implemented by React Form Hook useFieldArray and it is easy to use. */}\n        <div className=\"border-t border-gray-600 mt-2 pt-2\">\n          <p className=\"text-xl italic\">Dish options</p>\n          <span\n            onClick={() => onAddClicked()}\n            className=\"auth__form_button inline-block mb-2 cursor-pointer\"\n          >\n            Add Option\n          </span>\n          <div className=\"mb-2\">\n            {optionFields.length === 0 ? (\n              <div>\n                <p className=\"text-sm font-thin text-black\">\n                  No options now. Click above button if you need one.\n                </p>\n              </div>\n            ) : (\n              <div>\n                {/* useFieldArray() returns fields, append, remove, so on. */}\n                {optionFields.map((field, optionIndex) => (\n                  <div\n                    key={field.id}\n                    className=\"border border-gray-500 p-5 mb-2\"\n                  >\n                    <span className=\"inline-block mb-2 mr-4\">\n                      {`#${optionIndex + 1} Option`}\n                    </span>\n                    <span\n                      className=\"cursor-pointer text-xs py-1 px-2 bg-red-300 text-red-600 rounded-md hover:bg-red-600 hover:text-red-300 transition duration-200\"\n                      onClick={() => onDeleteClicked(optionIndex)}\n                    >\n                      Delete me\n                    </span>\n                    <div className=\"flex justify-around\">\n                      <div className=\"auth__input_wrapper w-full mr-3\">\n                        <input\n                          className=\"auth__form_input\"\n                          type=\"text\"\n                          name={`options[${optionIndex}].name`}\n                          defaultValue={`${field.name}`}\n                          placeholder=\"Name\"\n                          ref={register({ required: true })}\n                        />\n                      </div>\n                      <div className=\"auth__input_wrapper w-full\">\n                        <input\n                          className=\"auth__form_input\"\n                          type=\"number\"\n                          name={`options[${optionIndex}].extra`}\n                          defaultValue={`${field.extra}`}\n                          placeholder=\"Extra\"\n                          ref={register({ required: true, min: 0 })}\n                        />\n                      </div>\n                    </div>\n                    {/* Double nested dynamic field for options->choice. Not using useArrayField.. \n                    in fact cannot use for double nested dynamic field.. */}\n                    <div className=\"flex flex-col justify-center items-start w-2/3\">\n                      <NestedChoice\n                        key={`options[${optionIndex}]`}\n                        register={register}\n                        control={control}\n                        field={field}\n                        choices={\n                          dishData.getDish.dish.options[optionIndex].choices\n                        }\n                        namePrefix={`options[${optionIndex}].choices`}\n                      />\n\n                      {/*{optionChoices.map((o) => {\n                        if (o.optionIndex !== optionIndex) {\n                          return <></>;\n                        } else {\n                          return o.choicesInfo?.map(\n                            (choice, choiceIndex) =>\n                              choice.isExist && (\n                                <div\n                                  key={`${makeChoiceString(\n                                    o.optionIndex,\n                                    choiceIndex\n                                  )}`}\n                                  className=\"flex justify-around items-center mt-2\"\n                                >\n                                  <div className=\"w-1/6\">\n                                    <span>Choice #{choiceIndex + 1}</span>\n                                  </div>\n                                  <div className=\"w-2/6 mr-3\">\n                                    <input\n                                      className=\"auth__form_input\"\n                                      type=\"text\"\n                                      name={`options[${optionIndex}].choice[${choiceIndex}].name`}\n                                      placeholder=\"Name\"\n                                      defaultValue=\"\"\n                                      ref={register({ required: true })}\n                                    />\n                                  </div>\n                                  <div className=\" w-2/6\">\n                                    <input\n                                      className=\"auth__form_input\"\n                                      type=\"number\"\n                                      name={`options[${optionIndex}].choice[${choiceIndex}].extra`}\n                                      placeholder=\"Extra\"\n                                      defaultValue=\"0\"\n                                      ref={register({ required: true, min: 0 })}\n                                    />\n                                    <input\n                                      type=\"checkbox\"\n                                      name={`options[${optionIndex}].choice[${choiceIndex}].isRemoved`}\n                                      defaultValue={0}\n                                      ref={register()}\n                                      hidden\n                                    />\n                                  </div>\n                                  <div\n                                    onClick={() =>\n                                      onRemoveChoiceClicked(\n                                        optionIndex,\n                                        choiceIndex\n                                      )\n                                    }\n                                    className=\"cursor-pointer text-xs px-2 py-1 text-center bg-red-300 text-red-600 rounded-md hover:bg-red-600 hover:text-red-300 transition duration-200 ml-3\"\n                                  >\n                                    <FontAwesomeIcon icon={faTrashAlt} />\n                                  </div>\n                                </div>\n                              )\n                          );\n                        }\n                      })}*/}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        <FormButtonInactivable\n          isActivate={formState.isValid && !formState.isSubmitting}\n          loading={loading}\n        >\n          {dishData ? \"Update Dish\" : \"Create Dish\"}\n        </FormButtonInactivable>\n      </form>\n      {data?.createDish.error && (\n        <p className=\"auth__form_error\">{data.createDish.error}</p>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/update.restaurant.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurant.tsx",["188"],"import { gql, useQuery, useSubscription } from \"@apollo/client\";\nimport { faEdit, faHome, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport {\n  QueryMyRestaurant,\n  QueryMyRestaurantVariables,\n} from \"../../codegen/QueryMyRestaurant\";\nimport { DishItem } from \"../../components/dish.item\";\n\nimport {\n  DISH_FRAGMENT,\n  FULL_ORDER_FRAGMENT,\n  ORDER_FRAGMENT,\n  RESTAURANT_FRAGMENT,\n} from \"../../fragments\";\nimport {\n  VictoryChart,\n  VictoryAxis,\n  VictoryVoronoiContainer,\n  VictoryLine,\n  VictoryTheme,\n  VictoryTooltip,\n} from \"victory\";\nimport { OnPendingOrders } from \"../../codegen/OnPendingOrders\";\n\ninterface IParam {\n  id: string;\n}\n\nexport const GQL_MYRESTAURANT = gql`\n  query QueryMyRestaurant($id: Float!) {\n    restaurant(id: $id) {\n      ok\n      error\n      restaurant {\n        ...RestaurantPart\n        dishes {\n          ...DishPart\n        }\n        orders {\n          ...OrderPart\n        }\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n  ${DISH_FRAGMENT}\n  ${ORDER_FRAGMENT}\n`;\n\nconst GQL_PENDING_ORDERS = gql`\n  subscription OnPendingOrders {\n    pendingOrders {\n      ...FullOrderPart\n    }\n  }\n  ${FULL_ORDER_FRAGMENT}\n`;\n\ninterface IChartData {\n  x: string;\n  y: number;\n}\n\nexport const MyRestaurant = () => {\n  const { id } = useParams<IParam>();\n  let chartData: IChartData[] = [];\n  const { data, loading, error } = useQuery<\n    QueryMyRestaurant,\n    QueryMyRestaurantVariables\n  >(GQL_MYRESTAURANT, {\n    variables: {\n      id: +id,\n    },\n  });\n\n  const {\n    data: subscriptionData,\n    loading: subscriptionLoading,\n  } = useSubscription<OnPendingOrders>(GQL_PENDING_ORDERS);\n\n  const history = useHistory();\n\n  console.log(subscriptionLoading);\n\n  if (!subscriptionLoading && subscriptionData?.pendingOrders?.id) {\n    history.push(`/orders/${subscriptionData.pendingOrders.id}`);\n  }\n\n  if (data && !loading) {\n    data.restaurant?.restaurant?.orders?.forEach((order) => {\n      const date = new Date(order.createAt).toLocaleDateString(\"ko\");\n      const dateIndex = chartData.findIndex((data) => data.x === date);\n      if (dateIndex !== -1) {\n        chartData[dateIndex].y += order.totalCost ? order.totalCost : 0;\n      } else {\n        chartData.push({ x: date, y: order.totalCost ? order.totalCost : 0 });\n      }\n    });\n  }\n\n  return (\n    <div className=\"w-full flex flex-col items-center\">\n      {loading ? (\n        <div className=\"w-screen h-screen flex justify-content items-center\">\n          <h1>Loading...</h1>\n        </div>\n      ) : error || !data?.restaurant.ok ? (\n        <div className=\"w-screen h-screen flex justify-content items-center\">\n          <h1>Data fetching error</h1>\n        </div>\n      ) : (\n        <div className=\"w-full flex flex-col items-center\">\n          <div\n            className=\"w-full h-60 bg-cover bg-center flex items-center\"\n            style={{\n              backgroundImage: `url(${data?.restaurant.restaurant?.coverImage})`,\n            }}\n          >\n            <div className=\"sm:w-2/3 md:w-1/2 xl:w-1/3 bg-white py-4 pr-4 opacity-95\">\n              <h1 className=\"text-2xl pl-20 flex mb-3 \">\n                {data?.restaurant.restaurant?.name}\n              </h1>\n\n              <h4 className=\"text-sm font-light pl-20 flex mb-2 underline\">\n                {data?.restaurant.restaurant?.category?.name}\n              </h4>\n\n              <h4 className=\"text-sm font-light pl-20 flex items-center\">\n                <FontAwesomeIcon className=\"mr-2\" icon={faHome} />\n                {data?.restaurant.restaurant?.address}\n              </h4>\n            </div>\n          </div>\n\n          <div className=\"mt-5 flex justify-start layout__container\">\n            <Link\n              to={`/my-restaurant/${id}/create-dish`}\n              className=\"mr-8 text-white bg-gray-800 py-3 px-10 rounded-md\"\n            >\n              Add Dish &rarr;\n            </Link>\n            <Link\n              to=\"\"\n              className=\"text-white bg-lime-700 py-3 px-10 rounded-md\"\n            >\n              Buy Promotion &rarr;\n            </Link>\n          </div>\n          <div className=\"mt-4 layout__container\">\n            {data?.restaurant?.restaurant?.dishes?.length === 0 ? (\n              <div>No Dishes, please create your menus.</div>\n            ) : (\n              <div className=\"layout__container grid lg:grid-cols-3 md:grid-cols-2  sm:grid-cols-1 gap-4 mt-10\">\n                {data?.restaurant?.restaurant?.dishes?.map((dish) => (\n                  <div key={dish.id} className=\"flex flex-col\">\n                    <DishItem\n                      name={dish.name}\n                      description={dish.description}\n                      photo={dish.photo}\n                      price={dish.price}\n                    />\n                    <div className=\"flex justify-around text-center mt-2\">\n                      <Link\n                        className=\"w-1/3 bg-lime-200 text-lime-600 rounded-md px-3 py-1 hover:text-lime-200 hover:bg-lime-600 transition duration-200\"\n                        to={`/my-restaurant/${id}/${dish.id}/update`}\n                      >\n                        <FontAwesomeIcon icon={faEdit} /> Edit\n                      </Link>\n                      <Link\n                        className=\"w-1/3 bg-red-200 text-red-600 rounded-md px-3 py-1 hover:text-red-200 hover:bg-red-600 transition duration-200\"\n                        to=\"\"\n                      >\n                        <FontAwesomeIcon icon={faTrash} className=\"mr-1\" />\n                        Remove\n                      </Link>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <div className=\"mt-20 mb-20\">\n            <h4 className=\"text-center text-2xl font-medium\">Sales</h4>\n            <div className=\"w-full\">\n              <VictoryChart\n                domainPadding={20}\n                width={window.innerWidth}\n                height={500}\n                theme={VictoryTheme.material}\n                containerComponent={<VictoryVoronoiContainer />}\n              >\n                <VictoryLine\n                  data={chartData}\n                  style={{ data: { strokeWidth: 5 } }}\n                  labels={({ datum }) => `$${datum.y}`}\n                  labelComponent={\n                    <VictoryTooltip\n                      style={{ fontSize: 10 }}\n                      renderInPortal\n                      dy={-20}\n                    />\n                  }\n                  interpolation=\"natural\"\n                />\n\n                <VictoryAxis\n                  style={{\n                    tickLabels: {\n                      fontSize: 10,\n                    },\n                  }}\n                />\n              </VictoryChart>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/password.page.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx",["189"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  MutationVerifyCode,\n  MutationVerifyCodeVariables,\n} from \"../../codegen/MutationVerifyCode\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { useMe } from \"../../hooks/useMe\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_VERIFICATION = gql`\n  mutation MutationVerifyCode($code: String!) {\n    verifyCode(code: $code) {\n      ok\n      error\n    }\n  }\n`;\n\n/* Todo:\n    add sendVerification mutation on backend.\n*/\n\nexport const VerificationPage = () => {\n  const history = useHistory();\n  const onVerifyCompleted = (data: MutationVerifyCode) => {\n    const {\n      verifyCode: { ok },\n    } = data;\n\n    if (ok && userData?.me?.id) {\n      client.writeFragment({\n        id: `User:${userData?.me?.id}`,\n        fragment: gql`\n          fragment VerifiedUser on User {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      toast.success(\"Success to comfirm your verification.\");\n      setTimeout(() => history.push(\"/\"), 2000);\n    } else {\n      toast.error(\"Verification of your email address is not valid.\");\n    }\n  };\n  const [verifyCode, { loading, data, error }] = useMutation<\n    MutationVerifyCode,\n    MutationVerifyCodeVariables\n  >(GQL_VERIFICATION, { onCompleted: onVerifyCompleted });\n\n  const queryParam = useQueryParam();\n  const client = useApolloClient();\n  const { data: userData } = useMe();\n\n  useEffect(() => {\n    const code = queryParam.get(\"code\");\n\n    if (code) {\n      verifyCode({\n        variables: {\n          code,\n        },\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\n      <HelmetOnlyTitle title=\"Verifying your email address\" />\n      {loading ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Confirming your verification.. Please wait..\n        </h1>\n      ) : !error && data?.verifyCode.ok ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Your verification is confirmed. Please log in.\n        </h1>\n      ) : (\n        <div>\n          <h1 className=\"text-lg mb-2 font-medium\">\n            Couldn't confirm your email verification.\n          </h1>\n          <p>Message: {data?.verifyCode.error} </p>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/logout.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/me.page.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.restaurant.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurant.tsx",["190"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/fragments.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/helmet.onlytitle.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/categories.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurant.item.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/dish.item.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/cart.icon.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/category.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/order.tsx",["191"],"import { gql, useMutation, useQuery } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { OrderStatus, UserRole } from \"../codegen/globalTypes\";\nimport { OnOrderUpdate } from \"../codegen/OnOrderUpdate\";\nimport {\n  OwnerUpdateOrder,\n  OwnerUpdateOrderVariables,\n} from \"../codegen/OwnerUpdateOrder\";\nimport {\n  QueryOrderDetail,\n  QueryOrderDetailVariables,\n} from \"../codegen/QueryOrderDetail\";\nimport { HelmetOnlyTitle } from \"../components/helmet.onlytitle\";\nimport { FULL_ORDER_FRAGMENT } from \"../fragments\";\nimport { useMe } from \"../hooks/useMe\";\n\ninterface IParams {\n  id: string;\n}\n\nconst GQL_GET_ORDER = gql`\n  query QueryOrderDetail($id: Int!) {\n    orderDetail(id: $id) {\n      ok\n      error\n      order {\n        ...FullOrderPart\n      }\n    }\n  }\n  ${FULL_ORDER_FRAGMENT}\n`;\n\nconst GQL_ON_ORDER = gql`\n  subscription OnOrderUpdate($orderId: Float!) {\n    orderUpdate(orderId: $orderId) {\n      ...FullOrderPart\n    }\n  }\n  ${FULL_ORDER_FRAGMENT}\n`;\n\nconst GQL_UPDATE_ORDER = gql`\n  mutation OwnerUpdateOrder($id: Float!, $orderStatus: OrderStatus!) {\n    updateOrder(id: $id, orderStatus: $orderStatus) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const Order = () => {\n  const { id } = useParams<IParams>();\n  const { data, loading, error, subscribeToMore } = useQuery<\n    QueryOrderDetail,\n    QueryOrderDetailVariables\n  >(GQL_GET_ORDER, {\n    variables: {\n      id: +id,\n    },\n  });\n  const { data: userData } = useMe();\n  const [updateOrder] = useMutation<\n    OwnerUpdateOrder,\n    OwnerUpdateOrderVariables\n  >(GQL_UPDATE_ORDER, {\n    refetchQueries: [\n      {\n        query: GQL_GET_ORDER,\n        variables: {\n          id: +id,\n        },\n      },\n    ],\n  });\n\n  const onButtonClick = async (status: OrderStatus) =>\n    await updateOrder({ variables: { id: +id, orderStatus: status } });\n\n  useEffect(() => {\n    subscribeToMore({\n      document: GQL_ON_ORDER,\n      variables: {\n        orderId: +id,\n      },\n      updateQuery: (\n        prev,\n        {\n          subscriptionData: { data },\n        }: { subscriptionData: { data: OnOrderUpdate } }\n      ) => {\n        if (!data) return prev;\n        return {\n          orderDetail: {\n            ...prev.orderDetail,\n            order: {\n              ...data.orderUpdate,\n            },\n          },\n        };\n      },\n    });\n    return () => {};\n  }, [data]);\n\n  return (\n    <div className=\"layout__container mt-32 flex justify-center items-center\">\n      <HelmetOnlyTitle title=\"Order Detail\" />\n      {loading ? (\n        <div className=\"w-screen h-screen flex justify-content items-center\">\n          <h1>Loading...</h1>\n        </div>\n      ) : error || !data?.orderDetail.ok ? (\n        <div className=\"w-screen h-screen flex justify-content items-center\">\n          <h1>Data fetching error</h1>\n        </div>\n      ) : (\n        <div className=\"w-1/2 max-w-lg min-w-max flex flex-col items-center border border-gray-700\">\n          <div className=\"w-full text-center py-2 mx-auto bg-gray-700 text-white\">\n            Order #{data?.orderDetail?.order?.id}\n          </div>\n          <div className=\"w-full py-3 px-4 bg-white flex flex-col items-center justify-start\">\n            <div className=\" w-full py-4 text-center text-xl border-b border-gray-700\">\n              ${data?.orderDetail?.order?.totalCost}\n            </div>\n            <div className=\" w-full py-4 border-b border-gray-700\">\n              Prepared By: {data?.orderDetail?.order?.restaurant?.name}\n            </div>\n            <div className=\" w-full py-4 border-b border-gray-700\">\n              Deliver To: {data?.orderDetail?.order?.customer?.email}\n            </div>\n            <div className=\" w-full py-4 border-b border-gray-700\">\n              driver:&nbsp;\n              {data?.orderDetail?.order?.driver === null\n                ? \"Not yet\"\n                : data?.orderDetail?.order?.driver?.email}\n            </div>\n            {userData?.me?.role === UserRole.Client && (\n              <div className=\" w-full py-8 text-center text-lime-500 font-semibold text-lg\">\n                Status:{data?.orderDetail?.order?.orderStatus}\n              </div>\n            )}\n            {userData?.me?.role === UserRole.Delivery &&\n              (data?.orderDetail?.order?.orderStatus ===\n              OrderStatus.Pickedup ? (\n                <button\n                  className=\"auth__form_button\"\n                  onClick={() => onButtonClick(OrderStatus.Delivered)}\n                >\n                  Delivery Completed\n                </button>\n              ) : (\n                <div className=\" w-full py-8 text-center text-lime-500 font-semibold text-lg\">\n                  Status:{data?.orderDetail?.order?.orderStatus}\n                </div>\n              ))}\n\n            {userData?.me?.role === UserRole.Owner && (\n              <>\n                {data?.orderDetail?.order?.orderStatus ===\n                  OrderStatus.Pending && (\n                  <button\n                    className=\"auth__form_button\"\n                    onClick={() => onButtonClick(OrderStatus.Cooking)}\n                  >\n                    Accept Order\n                  </button>\n                )}\n                {data?.orderDetail?.order?.orderStatus ===\n                  OrderStatus.Cooking && (\n                  <button\n                    className=\"auth__form_button\"\n                    onClick={() => onButtonClick(OrderStatus.Cooked)}\n                  >\n                    Order Cooked\n                  </button>\n                )}\n                {data?.orderDetail?.order?.orderStatus !==\n                  OrderStatus.Cooking &&\n                data?.orderDetail?.order?.orderStatus === OrderStatus.Cooked ? (\n                  <div className=\" w-full py-8 text-center text-lime-500 font-semibold text-lg\">\n                    Status:{data?.orderDetail?.order?.orderStatus}\n                  </div>\n                ) : (\n                  <div className=\" w-full py-8 text-center text-lime-500 font-semibold text-lg\">\n                    Status:{data?.orderDetail?.order?.orderStatus}\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/driver/dashboard.tsx",["192","193"],"import React, { useEffect, useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport googleMapReact from \"google-map-react\";\nimport { gql, useMutation, useSubscription } from \"@apollo/client\";\nimport { FULL_ORDER_FRAGMENT } from \"../../fragments\";\nimport { OnCookedOrders } from \"../../codegen/OnCookedOrders\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  MutationOrderPick,\n  MutationOrderPickVariables,\n} from \"../../codegen/MutationOrderPick\";\nimport { OrderStatus } from \"../../codegen/globalTypes\";\nimport { toast } from \"react-toastify\";\n\ninterface ICoords {\n  lat: number;\n  lng: number;\n}\n\ninterface IDriverProps {\n  lat: number;\n  lng: number;\n  $hover?: any;\n}\n\nconst GQL_COOCKED_ORDERS = gql`\n  subscription OnCookedOrders {\n    cookedOrders {\n      ...FullOrderPart\n    }\n  }\n  ${FULL_ORDER_FRAGMENT}\n`;\n\nconst GQL_ORDER_PICKED = gql`\n  mutation MutationOrderPick($id: Float!, $status: OrderStatus!) {\n    updateOrder(id: $id, orderStatus: $status) {\n      ok\n      error\n    }\n  }\n`;\n\nconst Driver: React.FC<IDriverProps> = ({ lat, lng, $hover }) => (\n  <div\n    // @ts-ignore\n    lng={lng}\n    lat={lat}\n    className=\"rounded-full w-8 h-8 bg-white flex justify-center items-center\"\n  >\n    🚖\n  </div>\n);\n\nexport const DashBoard = () => {\n  const [driverCoords, setDriverCoords] = useState<ICoords>({ lng: 0, lat: 0 });\n  const [googleMap, setGoogleMap] = useState<google.maps.Map | null>(null);\n  const [googleMaps, setGoogleMaps] = useState<googleMapReact | null>(null);\n  const onSuccess = ({\n    coords: { latitude, longitude },\n  }: GeolocationPosition) => {\n    setDriverCoords({ lng: longitude, lat: latitude });\n  };\n  const onError = (error: GeolocationPositionError) => {};\n\n  const { data: cookedOrdersData } = useSubscription<OnCookedOrders>(\n    GQL_COOCKED_ORDERS\n  );\n  const history = useHistory();\n  const [pickOrder] = useMutation<\n    MutationOrderPick,\n    MutationOrderPickVariables\n  >(GQL_ORDER_PICKED, {\n    onCompleted: (data: MutationOrderPick) => {\n      if (data.updateOrder.ok) {\n        toast.success(\"Order picked up.\");\n        history.push(`/orders/${cookedOrdersData?.cookedOrders.id}`);\n      }\n    },\n  });\n\n  useEffect(() => {\n    navigator.geolocation.watchPosition(onSuccess, onError, {\n      enableHighAccuracy: true,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (googleMap && googleMaps) {\n      const geocoder = new google.maps.Geocoder();\n      geocoder.geocode(\n        {\n          location: new google.maps.LatLng(driverCoords.lat, driverCoords.lng),\n        },\n        (results, status) => {\n          console.log(\"status\", status);\n          console.log(\"results\", results);\n        }\n      );\n    }\n  }, [driverCoords.lat, driverCoords.lng]);\n\n  useEffect(() => {\n    if (cookedOrdersData?.cookedOrders?.id) {\n      onGetRouteClick();\n    }\n    return () => {};\n  }, [cookedOrdersData]);\n\n  const onApiLoaded = ({ map, maps }: { map: any; maps: any }) => {\n    setGoogleMap(map);\n    setGoogleMaps(maps);\n    map.panTo(new maps.LatLng(driverCoords.lat, driverCoords.lng));\n  };\n\n  const onGetRouteClick = () => {\n    if (googleMap) {\n      const directionsService = new google.maps.DirectionsService();\n      const directionsRenderer = new google.maps.DirectionsRenderer();\n      directionsRenderer.setMap(googleMap);\n      directionsService.route(\n        {\n          origin: {\n            location: new google.maps.LatLng(51.507351, -0.127758),\n          },\n          destination: {\n            location: new google.maps.LatLng(51.5127196, -0.1268353),\n          },\n          travelMode: google.maps.TravelMode.DRIVING,\n        },\n        (result, status) => {\n          console.log(result);\n          directionsRenderer.setDirections(result);\n        }\n      );\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"\" style={{ width: window.innerWidth, height: \"50vh\" }}>\n        <GoogleMapReact\n          defaultZoom={18}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={onApiLoaded}\n          center={{ lng: driverCoords.lng, lat: driverCoords.lat }}\n          bootstrapURLKeys={{ key: \"AIzaSyBXMuO-0G-Lkxq_JDP1v9zG7VN4n2l5DdE\" }}\n        >\n          <Driver lng={driverCoords.lng} lat={driverCoords.lat} />\n        </GoogleMapReact>\n        {cookedOrdersData?.cookedOrders.restaurant ? (\n          <div className=\" max-w-screen-sm  mx-auto bg-white relative -top-10 shadow-lg py-8 px-5\">\n            <h1 className=\"text-center text-3xl font-medium\">\n              New Cooked order\n            </h1>\n            <h4 className=\"text-center my-3 text-2xl font-medium\">\n              Pick it up soon @{\" \"}\n              {cookedOrdersData?.cookedOrders.restaurant?.name}\n            </h4>\n            <button\n              className=\"auth__form_button w-full block text-center mt-5\"\n              onClick={async () =>\n                await pickOrder({\n                  variables: {\n                    id: cookedOrdersData?.cookedOrders.id,\n                    status: OrderStatus.Pickedup,\n                  },\n                })\n              }\n            >\n              Accept Challenge &rarr;\n            </button>\n          </div>\n        ) : (\n          <div className=\" max-w-screen-sm  mx-auto bg-white relative -top-10 shadow-lg py-8 px-5\">\n            <h1 className=\"text-center text-3xl font-medium\">No orders yet</h1>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/my.page.tsx",["194","195","196","197","198"],"import { gql, useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OrderStatus } from \"../codegen/globalTypes\";\nimport {\n  QueryGetAllOrders,\n  QueryGetAllOrders_getAllOrders_orders,\n} from \"../codegen/QueryGetAllOrders\";\nimport { FULL_ORDER_FRAGMENT } from \"../fragments\";\n\nconst GQL_GET_ALL_ORDERS = gql`\n  query QueryGetAllOrders {\n    getAllOrders {\n      ok\n      error\n      orders {\n        ...FullOrderPart\n      }\n    }\n  }\n  ${FULL_ORDER_FRAGMENT}\n`;\n\nexport const MyPage = () => {\n  const {\n    data: allOrders,\n    loading: allOrdersLoading,\n    error,\n  } = useQuery<QueryGetAllOrders>(GQL_GET_ALL_ORDERS);\n\n  return (\n    <div className=\"layout__container mt-3\">\n      <div className=\"w-full flex flex-col\">\n        <Link to=\"/me\" className=\"auth__form_button text-center mb-2\">\n          Go to profile page\n        </Link>\n        <div className=\"flex flex-col w-full\">\n          <h1 className=\"text-2xl italic mb-4\">Your oders</h1>\n          <hr />\n          <div className=\"px-2 w-1/2 mt-4 self-center\">\n            <div className=\"flex flex-col items-center\">\n              {!allOrdersLoading &&\n                allOrders &&\n                allOrders.getAllOrders.orders?.map((order) => (\n                  <div className=\"w-full mb-4 flex flex-col items-center justify-start\">\n                    <div className=\"w-full py-2 bg-gray-700 text-white text-center\">\n                      Order: #{order.id}\n                    </div>\n                    <div className=\"w-full h-full border border-gray-200 p-3\">\n                      <ul>\n                        <li>\n                          <p>Order Status: {order.orderStatus}</p>\n                        </li>\n                        <li>\n                          <p>Total Cost: ${order.totalCost}</p>\n                        </li>\n                        <li>\n                          <p>Order from: {order.restaurant?.name} </p>\n                          <p className=\"pl-4\">\n                            - Address: {order.restaurant?.address}\n                          </p>\n                        </li>\n                        <li>\n                          <p>\n                            Deliver:{\" \"}\n                            {order.driver ? order.driver?.email : \"Not yet\"}\n                          </p>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/loader.tsx",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":26},{"ruleId":"207","severity":1,"message":"208","line":54,"column":6,"nodeType":"209","endLine":54,"endColumn":15,"suggestions":"210"},{"ruleId":"203","severity":1,"message":"211","line":6,"column":3,"nodeType":"205","messageId":"206","endLine":6,"endColumn":11},{"ruleId":"203","severity":1,"message":"212","line":10,"column":37,"nodeType":"205","messageId":"206","endLine":10,"endColumn":45},{"ruleId":"203","severity":1,"message":"213","line":87,"column":11,"nodeType":"205","messageId":"206","endLine":87,"endColumn":23},{"ruleId":"207","severity":1,"message":"214","line":119,"column":5,"nodeType":"209","endLine":119,"endColumn":14,"suggestions":"215"},{"ruleId":"207","severity":1,"message":"216","line":197,"column":6,"nodeType":"209","endLine":197,"endColumn":8,"suggestions":"217"},{"ruleId":"203","severity":1,"message":"204","line":4,"column":17,"nodeType":"205","messageId":"206","endLine":4,"endColumn":26},{"ruleId":"207","severity":1,"message":"218","line":71,"column":6,"nodeType":"209","endLine":71,"endColumn":8,"suggestions":"219"},{"ruleId":"203","severity":1,"message":"220","line":111,"column":9,"nodeType":"205","messageId":"206","endLine":111,"endColumn":17},{"ruleId":"207","severity":1,"message":"221","line":105,"column":6,"nodeType":"209","endLine":105,"endColumn":12,"suggestions":"222"},{"ruleId":"207","severity":1,"message":"223","line":101,"column":6,"nodeType":"209","endLine":101,"endColumn":42,"suggestions":"224"},{"ruleId":"207","severity":1,"message":"225","line":108,"column":6,"nodeType":"209","endLine":108,"endColumn":24,"suggestions":"226"},{"ruleId":"203","severity":1,"message":"204","line":2,"column":17,"nodeType":"205","messageId":"206","endLine":2,"endColumn":26},{"ruleId":"203","severity":1,"message":"212","line":2,"column":28,"nodeType":"205","messageId":"206","endLine":2,"endColumn":36},{"ruleId":"203","severity":1,"message":"227","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":21},{"ruleId":"203","severity":1,"message":"228","line":7,"column":3,"nodeType":"205","messageId":"206","endLine":7,"endColumn":40},{"ruleId":"203","severity":1,"message":"229","line":28,"column":5,"nodeType":"205","messageId":"206","endLine":28,"endColumn":10},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'queryParam', and 'queryReadyToStart'. Either include them or remove the dependency array.","ArrayExpression",["232"],"'useQuery' is defined but never used.","'useState' is defined but never used.","'IChoiceInput' is defined but never used.","React Hook useMemo has a missing dependency: 'append'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has missing dependencies: 'dishId' and 'updateDish'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has missing dependencies: 'queryParam' and 'verifyCode'. Either include them or remove the dependency array.",["235"],"'onScroll' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'subscribeToMore'. Either include them or remove the dependency array.",["236"],"React Hook useEffect has missing dependencies: 'googleMap' and 'googleMaps'. Either include them or remove the dependency array.",["237"],"React Hook useEffect has a missing dependency: 'onGetRouteClick'. Either include it or remove the dependency array.",["238"],"'OrderStatus' is defined but never used.","'QueryGetAllOrders_getAllOrders_orders' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [history, loading, queryParam, queryReadyToStart]",{"range":"253","text":"254"},"Update the dependencies array to be: [append, choices]",{"range":"255","text":"256"},"Update the dependencies array to be: [dishId, updateDish]",{"range":"257","text":"258"},"Update the dependencies array to be: [queryParam, verifyCode]",{"range":"259","text":"260"},"Update the dependencies array to be: [data, id, subscribeToMore]",{"range":"261","text":"262"},"Update the dependencies array to be: [driverCoords.lat, driverCoords.lng, googleMap, googleMaps]",{"range":"263","text":"264"},"Update the dependencies array to be: [cookedOrdersData, onGetRouteClick]",{"range":"265","text":"266"},[1460,1469],"[history, loading, queryParam, queryReadyToStart]",[2618,2627],"[append, choices]",[5042,5044],"[dishId, updateDish]",[1800,1802],"[queryParam, verifyCode]",[2403,2409],"[data, id, subscribeToMore]",[2702,2738],"[driverCoords.lat, driverCoords.lng, googleMap, googleMaps]",[2865,2883],"[cookedOrdersData, onGetRouteClick]"]