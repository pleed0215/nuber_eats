[{"D:\\mystudy\\nuber_eats\\src\\index.tsx":"1","D:\\mystudy\\nuber_eats\\src\\apollo.ts":"2","D:\\mystudy\\nuber_eats\\src\\reportWebVitals.ts":"3","D:\\mystudy\\nuber_eats\\src\\App.tsx":"4","D:\\mystudy\\nuber_eats\\src\\gloabl.constant.ts":"5","D:\\mystudy\\nuber_eats\\src\\routers\\logged-out-router.tsx":"6","D:\\mystudy\\nuber_eats\\src\\routers\\logged-in-router.tsx":"7","D:\\mystudy\\nuber_eats\\src\\pages\\404.tsx":"8","D:\\mystudy\\nuber_eats\\src\\pages\\create-account.tsx":"9","D:\\mystudy\\nuber_eats\\src\\pages\\logint.tsx":"10","D:\\mystudy\\nuber_eats\\src\\hooks\\useMe.ts":"11","D:\\mystudy\\nuber_eats\\src\\codegen\\globalTypes.ts":"12","D:\\mystudy\\nuber_eats\\src\\pages\\client\\search.tsx":"13","D:\\mystudy\\nuber_eats\\src\\pages\\client\\category.tsx":"14","D:\\mystudy\\nuber_eats\\src\\pages\\client\\restaurants.tsx":"15","D:\\mystudy\\nuber_eats\\src\\components\\header.tsx":"16","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\create.restaurant.tsx":"17","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\create.dish.tsx":"18","D:\\mystudy\\nuber_eats\\src\\pages\\user\\logout.tsx":"19","D:\\mystudy\\nuber_eats\\src\\pages\\user\\verification.page.tsx":"20","D:\\mystudy\\nuber_eats\\src\\pages\\user\\password.page.tsx":"21","D:\\mystudy\\nuber_eats\\src\\pages\\user\\me.page.tsx":"22","D:\\mystudy\\nuber_eats\\src\\pages\\client\\restaurant.tsx":"23","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\my.restaurants.tsx":"24","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\my.restaurant.tsx":"25","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\update.restaurant.tsx":"26","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\update.dish.tsx":"27","D:\\mystudy\\nuber_eats\\src\\utils.ts":"28","D:\\mystudy\\nuber_eats\\src\\components\\helmet.onlytitle.tsx":"29","D:\\mystudy\\nuber_eats\\src\\fragments.ts":"30","D:\\mystudy\\nuber_eats\\src\\hooks\\useQueryParam.ts":"31","D:\\mystudy\\nuber_eats\\src\\components\\form-button-inactivable.tsx":"32","D:\\mystudy\\nuber_eats\\src\\components\\restaurants.tsx":"33","D:\\mystudy\\nuber_eats\\src\\components\\restaurant.item.tsx":"34","D:\\mystudy\\nuber_eats\\src\\components\\dish.item.tsx":"35","D:\\mystudy\\nuber_eats\\src\\components\\uberlogo.tsx":"36","D:\\mystudy\\nuber_eats\\src\\components\\categories.tsx":"37","D:\\mystudy\\nuber_eats\\src\\components\\category.tsx":"38"},{"size":957,"mtime":1608632301343,"results":"39","hashOfConfig":"40"},{"size":1161,"mtime":1608632301338,"results":"41","hashOfConfig":"40"},{"size":440,"mtime":1608632301346,"results":"42","hashOfConfig":"40"},{"size":413,"mtime":1608632301338,"results":"43","hashOfConfig":"40"},{"size":42,"mtime":1608632301343,"results":"44","hashOfConfig":"40"},{"size":605,"mtime":1608632301338,"results":"45","hashOfConfig":"40"},{"size":3946,"mtime":1608797024121,"results":"46","hashOfConfig":"40"},{"size":671,"mtime":1608632301344,"results":"47","hashOfConfig":"40"},{"size":4837,"mtime":1608632301344,"results":"48","hashOfConfig":"40"},{"size":4310,"mtime":1608632301345,"results":"49","hashOfConfig":"40"},{"size":300,"mtime":1608632301343,"results":"50","hashOfConfig":"40"},{"size":1550,"mtime":1608800208943,"results":"51","hashOfConfig":"40"},{"size":2002,"mtime":1608632301344,"results":"52","hashOfConfig":"40"},{"size":1583,"mtime":1608632301344,"results":"53","hashOfConfig":"40"},{"size":3179,"mtime":1608632301344,"results":"54","hashOfConfig":"40"},{"size":1352,"mtime":1608632301342,"results":"55","hashOfConfig":"40"},{"size":5348,"mtime":1608632301345,"results":"56","hashOfConfig":"40"},{"size":9672,"mtime":1608716152190,"results":"57","hashOfConfig":"40"},{"size":1035,"mtime":1608632301345,"results":"58","hashOfConfig":"40"},{"size":2590,"mtime":1608632301346,"results":"59","hashOfConfig":"40"},{"size":3272,"mtime":1608632301346,"results":"60","hashOfConfig":"40"},{"size":4040,"mtime":1608632301346,"results":"61","hashOfConfig":"40"},{"size":3064,"mtime":1608797024122,"results":"62","hashOfConfig":"40"},{"size":3236,"mtime":1608797024123,"results":"63","hashOfConfig":"40"},{"size":6666,"mtime":1608797024123,"results":"64","hashOfConfig":"40"},{"size":4244,"mtime":1608797024123,"results":"65","hashOfConfig":"40"},{"size":8362,"mtime":1608800429664,"results":"66","hashOfConfig":"40"},{"size":182,"mtime":1608632301346,"results":"67","hashOfConfig":"40"},{"size":276,"mtime":1608632301342,"results":"68","hashOfConfig":"40"},{"size":1124,"mtime":1608716152190,"results":"69","hashOfConfig":"40"},{"size":130,"mtime":1608632301343,"results":"70","hashOfConfig":"40"},{"size":379,"mtime":1608632301342,"results":"71","hashOfConfig":"40"},{"size":948,"mtime":1608632301343,"results":"72","hashOfConfig":"40"},{"size":1154,"mtime":1608716152189,"results":"73","hashOfConfig":"40"},{"size":969,"mtime":1608716152189,"results":"74","hashOfConfig":"40"},{"size":173,"mtime":1608632301343,"results":"75","hashOfConfig":"40"},{"size":705,"mtime":1608632301342,"results":"76","hashOfConfig":"40"},{"size":836,"mtime":1608632301342,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"lt469s",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"D:\\mystudy\\nuber_eats\\src\\index.tsx",[],["162","163"],"D:\\mystudy\\nuber_eats\\src\\apollo.ts",[],"D:\\mystudy\\nuber_eats\\src\\reportWebVitals.ts",[],"D:\\mystudy\\nuber_eats\\src\\App.tsx",[],"D:\\mystudy\\nuber_eats\\src\\gloabl.constant.ts",[],"D:\\mystudy\\nuber_eats\\src\\routers\\logged-out-router.tsx",[],"D:\\mystudy\\nuber_eats\\src\\routers\\logged-in-router.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\404.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\create-account.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\logint.tsx",[],"D:\\mystudy\\nuber_eats\\src\\hooks\\useMe.ts",[],"D:\\mystudy\\nuber_eats\\src\\codegen\\globalTypes.ts",[],"D:\\mystudy\\nuber_eats\\src\\pages\\client\\search.tsx",["164"],"import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  QuerySearchByTerm,\r\n  QuerySearchByTermVariables,\r\n} from \"../../codegen/QuerySearchByTerm\";\r\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\r\nimport { Restaurants } from \"../../components/restaurants\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\r\n\r\nconst GQL_SEARCH_BY_TERM = gql`\r\n  query QuerySearchByTerm($term: String!, $page: Int!) {\r\n    searchRestaurantByName(search: { query: $term, page: $page }) {\r\n      ok\r\n      error\r\n      totalPages\r\n      countTotalItems\r\n      restaurants {\r\n        ...RestaurantPart\r\n        category {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const SearchPage: React.FC = () => {\r\n  const queryParam = useQueryParam();\r\n  const history = useHistory();\r\n  const [term, setTerm] = useState<string | null>(null);\r\n  const [queryReadyToStart, { loading, data }] = useLazyQuery<\r\n    QuerySearchByTerm,\r\n    QuerySearchByTermVariables\r\n  >(GQL_SEARCH_BY_TERM);\r\n\r\n  useEffect(() => {\r\n    const inputTerm = queryParam.get(\"term\");\r\n    if (!inputTerm) {\r\n      history.replace(\"/\");\r\n    } else {\r\n      queryReadyToStart({\r\n        variables: {\r\n          term: inputTerm,\r\n          page: 1,\r\n        },\r\n      });\r\n      setTerm(inputTerm);\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div>\r\n      <HelmetOnlyTitle title={`Searching term: \"${term}\"`} />\r\n      <div className=\"w-full\">\r\n        {loading ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Restaurants\r\n            restaurants={data?.searchRestaurantByName.restaurants}\r\n            categoryShow={true}\r\n            title={`Searching: \"${term}\" (Found: ${data?.searchRestaurantByName.countTotalItems})`}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nuber_eats\\src\\pages\\client\\category.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\client\\restaurants.tsx",[],"D:\\mystudy\\nuber_eats\\src\\components\\header.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\create.restaurant.tsx",["165","166"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  MutationCreateRestaurant,\r\n  MutationCreateRestaurantVariables,\r\n} from \"../../codegen/MutationCreateRestaurant\";\r\nimport { FormButtonInactivable } from \"../../components/form-button-inactivable\";\r\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { GQL_MYRESTAURANTS } from \"./my.restaurants\";\r\n\r\nconst GQL_CREATE_RESTAURANT = gql`\r\n  mutation MutationCreateRestaurant($input: CreateRestaurantInput!) {\r\n    createRestaurant(input: $input) {\r\n      error\r\n      ok\r\n      restaurant {\r\n        ...RestaurantPart\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\ninterface IForm {\r\n  name: string;\r\n  address: string;\r\n  category: string;\r\n  file: FileList;\r\n}\r\n\r\nexport const CreateRestaurant = () => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const [createRestaurant, { loading, data }] = useMutation<\r\n    MutationCreateRestaurant,\r\n    MutationCreateRestaurantVariables\r\n  >(GQL_CREATE_RESTAURANT, {\r\n    onCompleted: (data: MutationCreateRestaurant) => {\r\n      const { ok, error, restaurant } = data.createRestaurant;\r\n\r\n      if (ok) {\r\n        // faking cache\r\n        const currentQuery = client.readQuery({ query: GQL_MYRESTAURANTS });\r\n        const fakeData = currentQuery\r\n          ? {\r\n              myRestaurants: {\r\n                ...currentQuery?.myRestaurants,\r\n                count: currentQuery?.myRestaurants.count + 1,\r\n                restaurants: [\r\n                  {\r\n                    ...restaurant,\r\n                    __typename: \"Restaurant\",\r\n                  },\r\n                  ...currentQuery?.myRestaurants.restaurants,\r\n                ],\r\n              },\r\n            }\r\n          : {\r\n              myRestaurants: {\r\n                __typename: \"MyRestaurantOutput\",\r\n                ok: true,\r\n                error: null,\r\n                count: 1,\r\n                restaurants: {\r\n                  ...restaurant,\r\n                  __typename: \"Restaurant\",\r\n                },\r\n              },\r\n            };\r\n\r\n        client.writeQuery({\r\n          query: GQL_MYRESTAURANTS,\r\n          data: fakeData,\r\n        });\r\n\r\n        toast.success(\"Your restaurant is successfully made.\");\r\n      } else {\r\n        toast.error(\r\n          `Something is wrong while creating restaurant(Error: ${error})`\r\n        );\r\n      }\r\n      history.push(\"/\");\r\n    },\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    formState,\r\n    errors,\r\n  } = useForm<IForm>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onSubmit = async () => {\r\n    try {\r\n      const { name, address, category: categoryName, file } = getValues();\r\n      const actualFile = file[0];\r\n      const formBody = new FormData();\r\n      formBody.append(\"file\", actualFile);\r\n      const { url: coverImage } = await (\r\n        await fetch(`http://lednas.synology.me:32789/upload/`, {\r\n          method: \"POST\",\r\n          body: formBody,\r\n        })\r\n      ).json();\r\n      createRestaurant({\r\n        variables: {\r\n          input: {\r\n            name,\r\n            address,\r\n            categoryName,\r\n            coverImage,\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout__container\">\r\n      <HelmetOnlyTitle title=\"Creating restaurant\" />\r\n      <h1 className=\"text-2xl font-semibold my-8\">CreateRestaurant</h1>\r\n      <form\r\n        className=\"auth__form\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        encType=\"multipart/form-data\"\r\n      >\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            ref={register({ required: \"Name is required\" })}\r\n          />\r\n        </div>\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            name=\"address\"\r\n            ref={register({ required: \"Address is required\" })}\r\n          />\r\n        </div>\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"text\"\r\n            placeholder=\"Category\"\r\n            name=\"category\"\r\n            ref={register({ required: \"Category is required\" })}\r\n          />\r\n        </div>\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"file\"\r\n            name=\"file\"\r\n            accept=\"image/*\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n        <FormButtonInactivable\r\n          isActivate={formState.isValid && !formState.isSubmitting}\r\n          loading={loading}\r\n        >\r\n          Create Restaurant\r\n        </FormButtonInactivable>\r\n      </form>\r\n      {data?.createRestaurant.error && (\r\n        <p className=\"auth__form_error\">{data.createRestaurant.error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\create.dish.tsx",["167","168","169","170","171"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DishChoiceType, DishOptionType } from \"../../codegen/globalTypes\";\r\nimport {\r\n  MutationCreateDish,\r\n  MutationCreateDishVariables,\r\n  MutationCreateDish_createDish_dish_options,\r\n} from \"../../codegen/MutationCreateDish\";\r\nimport {\r\n  QueryMyRestaurant,\r\n  QueryMyRestaurant_restaurant_restaurant_dishes,\r\n} from \"../../codegen/QueryMyRestaurant\";\r\nimport { FormButtonInactivable } from \"../../components/form-button-inactivable\";\r\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\r\nimport { DISH_FRAGMENT } from \"../../fragments\";\r\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\r\nimport { GQL_MYRESTAURANT } from \"./my.restaurant\";\r\nimport { GQL_MYRESTAURANTS } from \"./my.restaurants\";\r\n\r\nconst GQL_CREATE_DISH = gql`\r\n  mutation MutationCreateDish($input: CreateDishInput!) {\r\n    createDish(input: $input) {\r\n      ok\r\n      error\r\n      dish {\r\n        ...DishPart\r\n      }\r\n    }\r\n  }\r\n  ${DISH_FRAGMENT}\r\n`;\r\n\r\ninterface IChoice {\r\n  name: string;\r\n  extra: number;\r\n}\r\n\r\ninterface IOptions {\r\n  name: string;\r\n  extra: number;\r\n  choices?: IChoice[] | null;\r\n}\r\ninterface ICreateDishForm {\r\n  name: string;\r\n  price: number;\r\n  description: string;\r\n  file: FileList;\r\n  options: IOptions[];\r\n}\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nexport const CreateDish: React.FC = () => {\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n\r\n  const [createDish, { loading, data, error }] = useMutation<\r\n    MutationCreateDish,\r\n    MutationCreateDishVariables\r\n  >(GQL_CREATE_DISH, {\r\n    onCompleted: (data: MutationCreateDish) => {\r\n      if (data.createDish.ok) {\r\n        const currentRestaurant = client.readQuery<QueryMyRestaurant>({\r\n          query: GQL_MYRESTAURANT,\r\n          variables: {\r\n            id: +restaurantId,\r\n          },\r\n        });\r\n        let dishes: QueryMyRestaurant_restaurant_restaurant_dishes[] = [];\r\n        if (currentRestaurant?.restaurant.restaurant?.dishes)\r\n          dishes = currentRestaurant?.restaurant.restaurant?.dishes;\r\n        client.writeQuery({\r\n          query: GQL_MYRESTAURANT,\r\n          data: {\r\n            restaurant: {\r\n              ...currentRestaurant?.restaurant,\r\n              restaurant: {\r\n                ...currentRestaurant?.restaurant.restaurant,\r\n                dishes: [data.createDish.dish, ...dishes],\r\n              },\r\n            },\r\n          },\r\n          variables: {\r\n            id: +restaurantId,\r\n          },\r\n        });\r\n        toast.success(\"Dish successfully made.\");\r\n        history.goBack();\r\n      } else {\r\n        toast.error(\r\n          `While creating menu, an error occured. Message: ${data.createDish.error}`\r\n        );\r\n      }\r\n    },\r\n  });\r\n  const {\r\n    register,\r\n    formState,\r\n    handleSubmit,\r\n    getValues,\r\n    control,\r\n    errors,\r\n  } = useForm<ICreateDishForm>({\r\n    mode: \"onChange\",\r\n  });\r\n  const {\r\n    fields: optionFields,\r\n    append: appendOption,\r\n    remove: removeOption,\r\n  } = useFieldArray({\r\n    control,\r\n    name: \"options\",\r\n  });\r\n\r\n  const { id: restaurantId } = useParams<IParams>();\r\n  const onSubmit = async () => {\r\n    try {\r\n      const { name, price, description, file, options } = getValues();\r\n      const dishOptions: DishOptionType[] = [];\r\n      const actualFile = file[0];\r\n      const formBody = new FormData();\r\n      formBody.append(\"file\", actualFile);\r\n      options?.forEach((option) => {\r\n        const dishChoices: DishChoiceType[] | null = option?.choices\r\n          ? []\r\n          : null;\r\n\r\n        if (dishChoices) {\r\n          option?.choices?.forEach((choice) => {\r\n            dishChoices.push({\r\n              name: choice.name,\r\n              extra: +choice.extra,\r\n            });\r\n          });\r\n        }\r\n\r\n        dishOptions.push({\r\n          name: option.name,\r\n          extra: +option.extra,\r\n        });\r\n      });\r\n      const { url: photo } = await (\r\n        await fetch(`http://lednas.synology.me:32789/upload/`, {\r\n          method: \"POST\",\r\n          body: formBody,\r\n        })\r\n      ).json();\r\n\r\n      await createDish({\r\n        variables: {\r\n          input: {\r\n            name,\r\n            description,\r\n            price: +price,\r\n            photo,\r\n            restaurantId: +restaurantId,\r\n            options: dishOptions,\r\n          },\r\n        },\r\n      });\r\n      history.goBack();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onAddClicked = () => {\r\n    appendOption({\r\n      value: \"\",\r\n    });\r\n  };\r\n  const onDeleteClicked = (index) => {\r\n    // @ts-ignore\r\n    removeOption(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout__container\">\r\n      <HelmetOnlyTitle title=\"Creating dish\" />\r\n      <h1 className=\"text-2xl font-semibold my-8\">Create Dish</h1>\r\n      <form\r\n        className=\"auth__form\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        encType=\"multipart/form-data\"\r\n      >\r\n        <p className=\"text-xl italic text-black mb-2\">\r\n          Write dish information here.\r\n        </p>\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            ref={register({ required: \"Name is required\" })}\r\n          />\r\n        </div>\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"number\"\r\n            placeholder=\"Price\"\r\n            name=\"price\"\r\n            ref={register({\r\n              required: \"Price is required\",\r\n              min: { value: 0, message: \"Price must be over 0\" },\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className={`auth__form_input ${\r\n              errors.description && \"border-red-500\"\r\n            }`}\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            name=\"description\"\r\n            ref={register({\r\n              required: \"Category is required\",\r\n              minLength: 5,\r\n            })}\r\n          />\r\n          {errors.description && (\r\n            <span className=\"auth__form_error\">\r\n              {errors.description.message}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"auth__input_wrapper\">\r\n          <label htmlFor=\"file\" className=\"text-md italic self-start mb-1\">\r\n            Dish image\r\n          </label>\r\n          <input\r\n            className=\"auth__form_input\"\r\n            id=\"file\"\r\n            type=\"file\"\r\n            name=\"file\"\r\n            accept=\"image/*\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n        <div className=\"border-t border-gray-600 mt-2 pt-2\">\r\n          <p className=\"text-xl italic\">Dish options</p>\r\n          <span\r\n            onClick={() => onAddClicked()}\r\n            className=\"auth__form_button inline-block mb-2 cursor-pointer\"\r\n          >\r\n            Add Option\r\n          </span>\r\n          <div className=\"mb-2\">\r\n            {optionFields.length === 0 ? (\r\n              <div>\r\n                <p className=\"text-sm font-thin text-black\">\r\n                  No options now. Click above button if you need one.\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {optionFields.map((field, index) => (\r\n                  <div\r\n                    key={field.id}\r\n                    className=\"border border-gray-500 p-5 mb-2\"\r\n                  >\r\n                    <span className=\"inline-block mb-2 mr-4\">\r\n                      {`#${index + 1} Option`}\r\n                    </span>\r\n                    <span\r\n                      className=\"cursor-pointer text-xs py-1 px-2 bg-red-300 text-red-600 rounded-md hover:bg-red-600 hover:text-red-300 transition duration-200\"\r\n                      onClick={() => onDeleteClicked(index)}\r\n                    >\r\n                      Delete me\r\n                    </span>\r\n                    <div className=\"flex justify-around\">\r\n                      <div className=\"auth__input_wrapper w-full mr-3\">\r\n                        <input\r\n                          className=\"auth__form_input\"\r\n                          type=\"text\"\r\n                          name={`options[${index}].name`}\r\n                          placeholder=\"Name\"\r\n                          ref={register({ required: true })}\r\n                        />\r\n                      </div>\r\n                      <div className=\"auth__input_wrapper w-full\">\r\n                        <input\r\n                          className=\"auth__form_input\"\r\n                          type=\"number\"\r\n                          name={`options[${index}].extra`}\r\n                          placeholder=\"Extra\"\r\n                          ref={register({ required: true, min: 0 })}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <FormButtonInactivable\r\n          isActivate={formState.isValid && !formState.isSubmitting}\r\n          loading={loading}\r\n        >\r\n          Create Dish\r\n        </FormButtonInactivable>\r\n      </form>\r\n      {data?.createDish.error && (\r\n        <p className=\"auth__form_error\">{data.createDish.error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nuber_eats\\src\\pages\\user\\logout.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\user\\verification.page.tsx",["172"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  MutationVerifyCode,\r\n  MutationVerifyCodeVariables,\r\n} from \"../../codegen/MutationVerifyCode\";\r\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\r\n\r\nconst GQL_VERIFICATION = gql`\r\n  mutation MutationVerifyCode($code: String!) {\r\n    verifyCode(code: $code) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\n/* Todo:\r\n    add sendVerification mutation on backend.\r\n*/\r\n\r\nexport const VerificationPage = () => {\r\n  const history = useHistory();\r\n  const onVerifyCompleted = (data: MutationVerifyCode) => {\r\n    const {\r\n      verifyCode: { ok },\r\n    } = data;\r\n\r\n    if (ok && userData?.me?.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData?.me?.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n      toast.success(\"Success to comfirm your verification.\");\r\n      setTimeout(() => history.push(\"/\"), 2000);\r\n    } else {\r\n      toast.error(\"Verification of your email address is not valid.\");\r\n    }\r\n  };\r\n  const [verifyCode, { loading, data, error }] = useMutation<\r\n    MutationVerifyCode,\r\n    MutationVerifyCodeVariables\r\n  >(GQL_VERIFICATION, { onCompleted: onVerifyCompleted });\r\n\r\n  const queryParam = useQueryParam();\r\n  const client = useApolloClient();\r\n  const { data: userData } = useMe();\r\n\r\n  useEffect(() => {\r\n    const code = queryParam.get(\"code\");\r\n\r\n    if (code) {\r\n      verifyCode({\r\n        variables: {\r\n          code,\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <HelmetOnlyTitle title=\"Verifying your email address\" />\r\n      {loading ? (\r\n        <h1 className=\"text-lg mb-2 font-medium\">\r\n          Confirming your verification.. Please wait..\r\n        </h1>\r\n      ) : !error && data?.verifyCode.ok ? (\r\n        <h1 className=\"text-lg mb-2 font-medium\">\r\n          Your verification is confirmed. Please log in.\r\n        </h1>\r\n      ) : (\r\n        <div>\r\n          <h1 className=\"text-lg mb-2 font-medium\">\r\n            Couldn't confirm your email verification.\r\n          </h1>\r\n          <p>Message: {data?.verifyCode.error} </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nuber_eats\\src\\pages\\user\\password.page.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\user\\me.page.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\client\\restaurant.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\my.restaurants.tsx",[],"D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\my.restaurant.tsx",["173","174","175","176","177","178"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport {\r\n  faEdit,\r\n  faHome,\r\n  faRecycle,\r\n  faRemoveFormat,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  QueryMyRestaurant,\r\n  QueryMyRestaurantVariables,\r\n} from \"../../codegen/QueryMyRestaurant\";\r\nimport { DishItem } from \"../../components/dish.item\";\r\n\r\nimport {\r\n  DISH_FRAGMENT,\r\n  ORDER_FRAGMENT,\r\n  RESTAURANT_FRAGMENT,\r\n} from \"../../fragments\";\r\nimport {\r\n  VictoryChart,\r\n  VictoryBar,\r\n  VictoryAxis,\r\n  VictoryPie,\r\n  VictoryVoronoiContainer,\r\n  VictoryLine,\r\n  VictoryTheme,\r\n  VictoryLabel,\r\n  VictoryTooltip,\r\n} from \"victory\";\r\n\r\ninterface IParam {\r\n  id: string;\r\n}\r\n\r\nexport const GQL_MYRESTAURANT = gql`\r\n  query QueryMyRestaurant($id: Float!) {\r\n    restaurant(id: $id) {\r\n      ok\r\n      error\r\n      restaurant {\r\n        ...RestaurantPart\r\n        dishes {\r\n          ...DishPart\r\n        }\r\n        orders {\r\n          ...OrderPart\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${DISH_FRAGMENT}\r\n  ${ORDER_FRAGMENT}\r\n`;\r\n\r\ninterface IChartData {\r\n  x: string;\r\n  y: number;\r\n}\r\n\r\nexport const MyRestaurant = () => {\r\n  const { id } = useParams<IParam>();\r\n  let chartData: IChartData[] = [];\r\n  const { data, loading, error } = useQuery<\r\n    QueryMyRestaurant,\r\n    QueryMyRestaurantVariables\r\n  >(GQL_MYRESTAURANT, {\r\n    variables: {\r\n      id: +id,\r\n    },\r\n  });\r\n\r\n  if (data && !loading) {\r\n    data.restaurant?.restaurant?.orders?.forEach((order) => {\r\n      const date = new Date(order.createAt).toLocaleDateString(\"ko\");\r\n      const dateIndex = chartData.findIndex((data) => data.x === date);\r\n      if (dateIndex !== -1) {\r\n        chartData[dateIndex].y += order.totalCost ? order.totalCost : 0;\r\n      } else {\r\n        chartData.push({ x: date, y: order.totalCost ? order.totalCost : 0 });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center\">\r\n      {loading ? (\r\n        <div className=\"w-screen h-screen flex justify-content items-center\">\r\n          <h1>Loading...</h1>\r\n        </div>\r\n      ) : error || !data?.restaurant.ok ? (\r\n        <div className=\"w-screen h-screen flex justify-content items-center\">\r\n          <h1>Data fetching error</h1>\r\n        </div>\r\n      ) : (\r\n        <div className=\"w-full flex flex-col items-center\">\r\n          <div\r\n            className=\"w-full h-60 bg-cover bg-center flex items-center\"\r\n            style={{\r\n              backgroundImage: `url(${data?.restaurant.restaurant?.coverImage})`,\r\n            }}\r\n          >\r\n            <div className=\"w-1/3 bg-white py-4 opacity-95\">\r\n              <h1 className=\"text-2xl pl-20 flex mb-3 \">\r\n                {data?.restaurant.restaurant?.name}\r\n              </h1>\r\n\r\n              <h4 className=\"text-sm font-light pl-20 flex mb-2 underline\">\r\n                {data?.restaurant.restaurant?.category?.name}\r\n              </h4>\r\n\r\n              <h4 className=\"text-sm font-light pl-20 flex items-center\">\r\n                <FontAwesomeIcon className=\"mr-2\" icon={faHome} />\r\n                {data?.restaurant.restaurant?.address}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-5 flex justify-start layout__container\">\r\n            <Link\r\n              to={`/my-restaurant/${id}/create-dish`}\r\n              className=\"mr-8 text-white bg-gray-800 py-3 px-10 rounded-md\"\r\n            >\r\n              Add Dish &rarr;\r\n            </Link>\r\n            <Link\r\n              to=\"\"\r\n              className=\"text-white bg-lime-700 py-3 px-10 rounded-md\"\r\n            >\r\n              Buy Promotion &rarr;\r\n            </Link>\r\n          </div>\r\n          <div className=\"mt-4 layout__container\">\r\n            {data?.restaurant?.restaurant?.dishes?.length === 0 ? (\r\n              <div>No Dishes, please create your menus.</div>\r\n            ) : (\r\n              <div className=\"layout__container grid lg:grid-cols-3 md:grid-cols-2  sm:grid-cols-1 gap-4 mt-10\">\r\n                {data?.restaurant?.restaurant?.dishes?.map((dish) => (\r\n                  <div key={dish.id} className=\"flex flex-col\">\r\n                    <DishItem\r\n                      name={dish.name}\r\n                      description={dish.description}\r\n                      photo={dish.photo}\r\n                      price={dish.price}\r\n                    />\r\n                    <div className=\"flex justify-around text-center mt-2\">\r\n                      <Link\r\n                        className=\"w-1/3 bg-lime-200 text-lime-600 rounded-md px-3 py-1 hover:text-lime-200 hover:bg-lime-600 transition duration-200\"\r\n                        to={`/my-restaurant/${id}/${dish.id}/update`}\r\n                      >\r\n                        <FontAwesomeIcon icon={faEdit} /> Edit\r\n                      </Link>\r\n                      <Link\r\n                        className=\"w-1/3 bg-red-200 text-red-600 rounded-md px-3 py-1 hover:text-red-200 hover:bg-red-600 transition duration-200\"\r\n                        to=\"\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} className=\"mr-1\" />\r\n                        Remove\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"mt-20 mb-20\">\r\n            <h4 className=\"text-center text-2xl font-medium\">Sales</h4>\r\n            <div className=\"w-full\">\r\n              <VictoryChart\r\n                domainPadding={20}\r\n                width={window.innerWidth}\r\n                height={500}\r\n                theme={VictoryTheme.material}\r\n                containerComponent={<VictoryVoronoiContainer />}\r\n              >\r\n                <VictoryLine\r\n                  data={chartData}\r\n                  style={{ data: { strokeWidth: 5 } }}\r\n                  labels={({ datum }) => `$${datum.y}`}\r\n                  labelComponent={\r\n                    <VictoryTooltip\r\n                      style={{ fontSize: 10 }}\r\n                      renderInPortal\r\n                      dy={-20}\r\n                    />\r\n                  }\r\n                  interpolation=\"natural\"\r\n                />\r\n\r\n                <VictoryAxis\r\n                  style={{\r\n                    tickLabels: {\r\n                      fontSize: 10,\r\n                    },\r\n                  }}\r\n                />\r\n              </VictoryChart>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\update.restaurant.tsx",["179","180","181","182","183","184"],"import { gql, useApolloClient, useMutation, useQuery } from \"@apollo/client\";\r\nimport { reset } from \"cypress/types/sinon\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  MutationUpdateRestaurant,\r\n  MutationUpdateRestaurantVariables,\r\n} from \"../../codegen/MutationUpdateRestaurant\";\r\nimport {\r\n  QueryMyRestaurant,\r\n  QueryMyRestaurantVariables,\r\n} from \"../../codegen/QueryMyRestaurant\";\r\nimport { QueryRestaurant } from \"../../codegen/QueryRestaurant\";\r\nimport { FormButtonInactivable } from \"../../components/form-button-inactivable\";\r\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { GQL_MYRESTAURANT } from \"./my.restaurant\";\r\n\r\nconst GQL_UPDATE_RESTAURANT = gql`\r\n  mutation MutationUpdateRestaurant($input: UpdateRestaurantInput!) {\r\n    updateRestaurant(input: $input) {\r\n      error\r\n      ok\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IForm {\r\n  name: string;\r\n  address: string;\r\n  category: string;\r\n}\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nexport const UpdateRestaurant = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams<IParams>();\r\n  const { data } = useQuery<QueryMyRestaurant, QueryMyRestaurantVariables>(\r\n    GQL_MYRESTAURANT,\r\n    {\r\n      variables: {\r\n        id: +id,\r\n      },\r\n    }\r\n  );\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    getValues,\r\n    setValue,\r\n    formState,\r\n    errors,\r\n  } = useForm<IForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      name: data?.restaurant?.restaurant?.name,\r\n      address: data?.restaurant?.restaurant?.address,\r\n      category: data?.restaurant?.restaurant?.category?.name,\r\n    },\r\n  });\r\n\r\n  console.log(formState);\r\n\r\n  const [updateRestaurant, { loading }] = useMutation<\r\n    MutationUpdateRestaurant,\r\n    MutationUpdateRestaurantVariables\r\n  >(GQL_UPDATE_RESTAURANT, {\r\n    onCompleted: (data: MutationUpdateRestaurant) => {\r\n      const { ok, error } = data.updateRestaurant;\r\n      if (ok) {\r\n        toast.success(\"Your restaurant is successfully made.\");\r\n      } else {\r\n        toast.error(\r\n          `Something is wrong while creating restaurant(Error: ${error})`\r\n        );\r\n      }\r\n      history.push(\"/\");\r\n    },\r\n    refetchQueries: [\r\n      {\r\n        query: GQL_MYRESTAURANT,\r\n        variables: {\r\n          id: +id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const { name, address, category: categoryName } = getValues();\r\n\r\n      updateRestaurant({\r\n        variables: {\r\n          input: {\r\n            id: +id,\r\n            name,\r\n            address,\r\n            categoryName,\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout__container\">\r\n      <HelmetOnlyTitle title=\"Creating restaurant\" />\r\n      <h1 className=\"text-2xl font-semibold my-8\">CreateRestaurant</h1>\r\n      <form\r\n        className=\"auth__form\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        encType=\"multipart/form-data\"\r\n      >\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            ref={register({ required: \"Name is required\" })}\r\n          />\r\n        </div>\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            name=\"address\"\r\n            ref={register({ required: \"Address is required\" })}\r\n          />\r\n        </div>\r\n        <div className=\"auth__input_wrapper\">\r\n          <input\r\n            className=\"auth__form_input\"\r\n            type=\"text\"\r\n            placeholder=\"Category\"\r\n            name=\"category\"\r\n            ref={register({ required: \"Category is required\" })}\r\n          />\r\n        </div>\r\n\r\n        <FormButtonInactivable isActivate={formState.isValid} loading={loading}>\r\n          Update Restaurant\r\n        </FormButtonInactivable>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","D:\\mystudy\\nuber_eats\\src\\pages\\restaurant\\update.dish.tsx",["185","186","187","188","189"],"D:\\mystudy\\nuber_eats\\src\\utils.ts",["190","191"],"export const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n","D:\\mystudy\\nuber_eats\\src\\components\\helmet.onlytitle.tsx",[],"D:\\mystudy\\nuber_eats\\src\\fragments.ts",[],"D:\\mystudy\\nuber_eats\\src\\hooks\\useQueryParam.ts",[],"D:\\mystudy\\nuber_eats\\src\\components\\form-button-inactivable.tsx",[],"D:\\mystudy\\nuber_eats\\src\\components\\restaurants.tsx",[],"D:\\mystudy\\nuber_eats\\src\\components\\restaurant.item.tsx",[],"D:\\mystudy\\nuber_eats\\src\\components\\dish.item.tsx",[],"D:\\mystudy\\nuber_eats\\src\\components\\uberlogo.tsx",[],"D:\\mystudy\\nuber_eats\\src\\components\\categories.tsx",[],"D:\\mystudy\\nuber_eats\\src\\components\\category.tsx",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":54,"column":6,"nodeType":"198","endLine":54,"endColumn":15,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":17,"nodeType":"202","messageId":"203","endLine":2,"endColumn":25},{"ruleId":"200","severity":1,"message":"204","line":96,"column":5,"nodeType":"202","messageId":"203","endLine":96,"endColumn":11},{"ruleId":"200","severity":1,"message":"201","line":2,"column":17,"nodeType":"202","messageId":"203","endLine":2,"endColumn":25},{"ruleId":"200","severity":1,"message":"205","line":10,"column":3,"nodeType":"202","messageId":"203","endLine":10,"endColumn":45},{"ruleId":"200","severity":1,"message":"206","line":19,"column":10,"nodeType":"202","messageId":"203","endLine":19,"endColumn":23},{"ruleId":"200","severity":1,"message":"207","line":21,"column":10,"nodeType":"202","messageId":"203","endLine":21,"endColumn":27},{"ruleId":"200","severity":1,"message":"208","line":62,"column":39,"nodeType":"202","messageId":"203","endLine":62,"endColumn":44},{"ruleId":"196","severity":1,"message":"209","line":71,"column":6,"nodeType":"198","endLine":71,"endColumn":8,"suggestions":"210"},{"ruleId":"200","severity":1,"message":"211","line":5,"column":3,"nodeType":"202","messageId":"203","endLine":5,"endColumn":12},{"ruleId":"200","severity":1,"message":"212","line":6,"column":3,"nodeType":"202","messageId":"203","endLine":6,"endColumn":17},{"ruleId":"200","severity":1,"message":"213","line":10,"column":17,"nodeType":"202","messageId":"203","endLine":10,"endColumn":26},{"ruleId":"200","severity":1,"message":"214","line":25,"column":3,"nodeType":"202","messageId":"203","endLine":25,"endColumn":13},{"ruleId":"200","severity":1,"message":"215","line":27,"column":3,"nodeType":"202","messageId":"203","endLine":27,"endColumn":13},{"ruleId":"200","severity":1,"message":"216","line":31,"column":3,"nodeType":"202","messageId":"203","endLine":31,"endColumn":15},{"ruleId":"200","severity":1,"message":"217","line":1,"column":15,"nodeType":"202","messageId":"203","endLine":1,"endColumn":30},{"ruleId":"200","severity":1,"message":"218","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":15},{"ruleId":"200","severity":1,"message":"219","line":16,"column":10,"nodeType":"202","messageId":"203","endLine":16,"endColumn":25},{"ruleId":"200","severity":1,"message":"220","line":19,"column":10,"nodeType":"202","messageId":"203","endLine":19,"endColumn":29},{"ruleId":"200","severity":1,"message":"221","line":56,"column":5,"nodeType":"202","messageId":"203","endLine":56,"endColumn":13},{"ruleId":"200","severity":1,"message":"204","line":58,"column":5,"nodeType":"202","messageId":"203","endLine":58,"endColumn":11},{"ruleId":"200","severity":1,"message":"217","line":1,"column":15,"nodeType":"202","messageId":"203","endLine":1,"endColumn":30},{"ruleId":"200","severity":1,"message":"201","line":2,"column":17,"nodeType":"202","messageId":"203","endLine":2,"endColumn":25},{"ruleId":"200","severity":1,"message":"222","line":17,"column":10,"nodeType":"202","messageId":"203","endLine":17,"endColumn":26},{"ruleId":"200","severity":1,"message":"223","line":78,"column":11,"nodeType":"202","messageId":"203","endLine":78,"endColumn":23},{"ruleId":"200","severity":1,"message":"224","line":86,"column":33,"nodeType":"202","messageId":"203","endLine":86,"endColumn":37},{"ruleId":"225","severity":1,"message":"226","line":1,"column":38,"nodeType":"227","messageId":"228","endLine":1,"endColumn":39,"suggestions":"229"},{"ruleId":"225","severity":1,"message":"226","line":1,"column":63,"nodeType":"227","messageId":"228","endLine":1,"endColumn":64,"suggestions":"230"},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'queryParam', and 'queryReadyToStart'. Either include them or remove the dependency array.","ArrayExpression",["233"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","'MutationCreateDish_createDish_dish_options' is defined but never used.","'useQueryParam' is defined but never used.","'GQL_MYRESTAURANTS' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'queryParam' and 'verifyCode'. Either include them or remove the dependency array.",["234"],"'faRecycle' is defined but never used.","'faRemoveFormat' is defined but never used.","'useEffect' is defined but never used.","'VictoryBar' is defined but never used.","'VictoryPie' is defined but never used.","'VictoryLabel' is defined but never used.","'useApolloClient' is defined but never used.","'reset' is defined but never used.","'QueryRestaurant' is defined but never used.","'RESTAURANT_FRAGMENT' is defined but never used.","'setValue' is assigned a value but never used.","'GQL_MYRESTAURANT' is defined but never used.","'restaurantId' is assigned a value but never used.","'data' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["235","236"],["237","238"],"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"messageId":"243","fix":"244","desc":"245"},{"messageId":"246","fix":"247","desc":"248"},{"messageId":"243","fix":"249","desc":"245"},{"messageId":"246","fix":"250","desc":"248"},"Update the dependencies array to be: [history, loading, queryParam, queryReadyToStart]",{"range":"251","text":"252"},"Update the dependencies array to be: [queryParam, verifyCode]",{"range":"253","text":"254"},"removeEscape",{"range":"255","text":"256"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"257","text":"258"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"259","text":"256"},{"range":"260","text":"258"},[1513,1522],"[history, loading, queryParam, queryReadyToStart]",[1870,1872],"[queryParam, verifyCode]",[37,38],"",[37,37],"\\",[62,63],[62,62]]