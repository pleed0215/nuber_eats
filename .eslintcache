[{"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx":"1","/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts":"2","/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts":"3","/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx":"4","/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.tsx":"5","/Users/pleed0215/Documents/mystudy/nuber_eats/src/Routers/logged-in-router.tsx":"6","/Users/pleed0215/Documents/mystudy/nuber_eats/src/Routers/logged-out-router.tsx":"7","/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts":"8","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx":"9","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx":"10","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx":"11","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/search.tsx":"12","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/me.page.tsx":"13","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx":"14","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/password.page.tsx":"15","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx":"16","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/logout.tsx":"17","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/category.tsx":"18","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.tsx":"19","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx":"20","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx":"21","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/helmet.onlytitle.tsx":"22","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx":"23","/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.tsx":"24","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.tsx":"25","/Users/pleed0215/Documents/mystudy/nuber_eats/src/fragments.tsx":"26","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/categories.tsx":"27","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurants.tsx":"28","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/category.tsx":"29","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurant.item.tsx":"30"},{"size":929,"mtime":1608022975297,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1608022975300,"results":"33","hashOfConfig":"32"},{"size":1070,"mtime":1608022975292,"results":"34","hashOfConfig":"32"},{"size":426,"mtime":1608022975292,"results":"35","hashOfConfig":"32"},{"size":41,"mtime":1608022975296,"results":"36","hashOfConfig":"32"},{"size":1875,"mtime":1608025825493,"results":"37","hashOfConfig":"32"},{"size":582,"mtime":1608022975292,"results":"38","hashOfConfig":"32"},{"size":725,"mtime":1608081107434,"results":"39","hashOfConfig":"32"},{"size":1310,"mtime":1608022975295,"results":"40","hashOfConfig":"32"},{"size":650,"mtime":1608022975298,"results":"41","hashOfConfig":"32"},{"size":4686,"mtime":1608075723566,"results":"42","hashOfConfig":"32"},{"size":1937,"mtime":1608077057179,"results":"43","hashOfConfig":"32"},{"size":3775,"mtime":1608022975299,"results":"44","hashOfConfig":"32"},{"size":2496,"mtime":1608022975300,"results":"45","hashOfConfig":"32"},{"size":3156,"mtime":1608022975300,"results":"46","hashOfConfig":"32"},{"size":3083,"mtime":1608080431085,"results":"47","hashOfConfig":"32"},{"size":1005,"mtime":1608022975299,"results":"48","hashOfConfig":"32"},{"size":1482,"mtime":1608080908559,"results":"49","hashOfConfig":"32"},{"size":283,"mtime":1608022975296,"results":"50","hashOfConfig":"32"},{"size":4204,"mtime":1608022975299,"results":"51","hashOfConfig":"32"},{"size":167,"mtime":1608022975296,"results":"52","hashOfConfig":"32"},{"size":264,"mtime":1608022975295,"results":"53","hashOfConfig":"32"},{"size":363,"mtime":1608022975295,"results":"54","hashOfConfig":"32"},{"size":181,"mtime":1608022975300,"results":"55","hashOfConfig":"32"},{"size":127,"mtime":1608022975297,"results":"56","hashOfConfig":"32"},{"size":395,"mtime":1608077036689,"results":"57","hashOfConfig":"32"},{"size":681,"mtime":1608078694246,"results":"58","hashOfConfig":"32"},{"size":915,"mtime":1608080436338,"results":"59","hashOfConfig":"32"},{"size":803,"mtime":1608025672536,"results":"60","hashOfConfig":"32"},{"size":968,"mtime":1608079212717,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"krz1gk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx",[],["130","131"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/Routers/logged-in-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/Routers/logged-out-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/search.tsx",["132","133"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  QuerySearchByTerm,\n  QuerySearchByTermVariables,\n} from \"../../codegen/QuerySearchByTerm\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { Restaurants } from \"../../components/restaurants\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_SEARCH_BY_TERM = gql`\n  query QuerySearchByTerm($term: String!, $page: Int!) {\n    searchRestaurantByName(search: { query: $term, page: $page }) {\n      ok\n      error\n      totalPages\n      countTotalItems\n      restaurants {\n        ...RestaurantPart\n        category {\n          name\n          slug\n        }\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nexport const SearchPage: React.FC = () => {\n  const queryParam = useQueryParam();\n  const history = useHistory();\n  const [term, setTerm] = useState<string | null>(null);\n  const [queryReadyToStart, { loading, data, error }] = useLazyQuery<\n    QuerySearchByTerm,\n    QuerySearchByTermVariables\n  >(GQL_SEARCH_BY_TERM);\n\n  useEffect(() => {\n    const inputTerm = queryParam.get(\"term\");\n    if (!inputTerm) {\n      history.replace(\"/\");\n    } else {\n      queryReadyToStart({\n        variables: {\n          term: inputTerm,\n          page: 1,\n        },\n      });\n      setTerm(inputTerm);\n    }\n  }, [loading]);\n\n  return (\n    <div>\n      <HelmetOnlyTitle title={`Searching term: \"${term}\"`} />\n      <div className=\"w-full\">\n        {loading ? (\n          <h1>Loading...</h1>\n        ) : (\n          <Restaurants\n            restaurants={data?.searchRestaurantByName.restaurants}\n            categoryShow={true}\n            title={`Searching: \"${term}\" (Found: ${data?.searchRestaurantByName.countTotalItems})`}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/me.page.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx",["134"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  MutationVerifyCode,\n  MutationVerifyCodeVariables,\n} from \"../../codegen/MutationVerifyCode\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { useMe } from \"../../hooks/useMe\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_VERIFICATION = gql`\n  mutation MutationVerifyCode($code: String!) {\n    verifyCode(code: $code) {\n      ok\n      error\n    }\n  }\n`;\n\n/* Todo:\n    add sendVerification mutation on backend.\n*/\n\nexport const VerificationPage = () => {\n  const history = useHistory();\n  const onVerifyCompleted = (data: MutationVerifyCode) => {\n    const {\n      verifyCode: { ok },\n    } = data;\n\n    if (ok && userData?.me?.id) {\n      client.writeFragment({\n        id: `User:${userData?.me?.id}`,\n        fragment: gql`\n          fragment VerifiedUser on User {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      toast.success(\"Success to comfirm your verification.\");\n      setTimeout(() => history.push(\"/\"), 2000);\n    } else {\n      toast.error(\"Verification of your email address is not valid.\");\n    }\n  };\n  const [verifyCode, { loading, data, error }] = useMutation<\n    MutationVerifyCode,\n    MutationVerifyCodeVariables\n  >(GQL_VERIFICATION, { onCompleted: onVerifyCompleted });\n\n  const queryParam = useQueryParam();\n  const client = useApolloClient();\n  const { data: userData } = useMe();\n\n  useEffect(() => {\n    const code = queryParam.get(\"code\");\n\n    if (code) {\n      verifyCode({\n        variables: {\n          code,\n        },\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\n      <HelmetOnlyTitle title=\"Verifying your email address\" />\n      {loading ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Confirming your verification.. Please wait..\n        </h1>\n      ) : !error && data?.verifyCode.ok ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Your verification is confirmed. Please log in.\n        </h1>\n      ) : (\n        <div>\n          <h1 className=\"text-lg mb-2 font-medium\">\n            Couldn't confirm your email verification.\n          </h1>\n          <p>Message: {data?.verifyCode.error} </p>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/password.page.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx",["135","136"],"import { gql, useQuery } from \"@apollo/client\";\nimport {\n  QueryRestaurants,\n  QueryRestaurantsVariables,\n} from \"../../codegen/QueryRestaurants\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { Categories } from \"../../components/categories\";\nimport { Restaurants } from \"../../components/restaurants\";\n\n// backend에 page를 Number로 주는 바람에... page type이 Float이다.. 나중에 수정해야 한다.\nconst GQL_RESTAURANTS = gql`\n  query QueryRestaurants($page: Float!) {\n    allCategories {\n      ok\n      error\n      count\n      categories {\n        id\n        name\n        image\n        slug\n        restaurants {\n          name\n        }\n      }\n    }\n    allRestaurants(page: $page) {\n      ok\n      error\n      totalPages\n      currentPage\n      countTotalItems\n      restaurants {\n        id\n        name\n        coverImage\n        address\n        isPromoted\n        category {\n          name\n          slug\n        }\n      }\n    }\n  }\n`;\n\ninterface ISearchForm {\n  searchTerm: string;\n}\n\nexport const RestaurantsPage = () => {\n  const history = useHistory();\n  const [page, setPage] = useState(1);\n  const { register, handleSubmit, getValues } = useForm<ISearchForm>();\n  const { data, loading, error } = useQuery<\n    QueryRestaurants,\n    QueryRestaurantsVariables\n  >(GQL_RESTAURANTS, { variables: { page } });\n\n  const onPrevPage = () => setPage(page > 1 ? page - 1 : 1);\n  const onNextPage = () => {\n    if (data?.allRestaurants.totalPages)\n      setPage(\n        page < data?.allRestaurants.totalPages\n          ? page + 1\n          : data?.allRestaurants.totalPages\n      );\n  };\n\n  const onSubmit = ({ searchTerm }: ISearchForm) => {\n    history.push({\n      pathname: \"/search\",\n      search: `?term=${searchTerm}`,\n    });\n  };\n\n  console.log(data?.allRestaurants.restaurants);\n\n  return (\n    <div className=\"w-full\">\n      <HelmetOnlyTitle title=\"Restaurants..\" />\n      <form\n        className=\"w-full py-40 flex items-center justify-center bg-gray-800\"\n        action=\"search\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <input\n          type=\"search\"\n          name=\"searchTerm\"\n          ref={register({ required: true, minLength: 3 })}\n          className=\"form_input w-5/12 sm:w-1/2 rounded-md\"\n          placeholder=\"Search restaurants...\"\n        />\n      </form>\n      <div className=\"layout__container flex flex-col justify-center items-center mt-10\">\n        {!loading && data && (\n          <>\n            <Categories categories={data?.allCategories.categories} />\n            <Restaurants restaurants={data?.allRestaurants.restaurants} />\n            <div className=\"w-40 flex justify-between\">\n              <button onClick={onPrevPage}>prev</button>\n              <span>{`${page} / ${data?.allRestaurants.totalPages}`}</span>\n              <button onClick={onNextPage}>next</button>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/logout.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/category.tsx",["137"],"import { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  QueryCategory,\n  QueryCategoryVariables,\n} from \"../../codegen/QueryCategory\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { Restaurants } from \"../../components/restaurants\";\n\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\n\ninterface IParams {\n  slug: string;\n}\n\nconst GQL_QUERY_CATEGORY = gql`\n  query QueryCategory($page: Int, $slug: String!) {\n    category(slug: $slug, page: $page) {\n      ok\n      error\n      totalPages\n      currentPage\n      countTotalItems\n      category {\n        ...CategoryPart\n      }\n      restaurants {\n        ...RestaurantPart\n        category {\n          id\n          name\n          slug\n        }\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n  ${CATEGORY_FRAGMENT}\n`;\n\nexport const CategoryPage = () => {\n  const { slug } = useParams<IParams>();\n  const { data, error, loading } = useQuery<\n    QueryCategory,\n    QueryCategoryVariables\n  >(GQL_QUERY_CATEGORY, {\n    variables: {\n      slug,\n    },\n  });\n\n  return (\n    <div className=\"w-full\">\n      <HelmetOnlyTitle title={`Category:`} />\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <Restaurants\n          restaurants={data?.category.restaurants}\n          categoryShow={false}\n          title={`Category: ${data?.category.category?.name}`}\n        />\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx",["138"],"import { gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport {\n  LoginMutation,\n  LoginMutationVariables,\n} from \"../codegen/LoginMutation\";\nimport { EMAIL_REGEX } from \"../utils\";\n\nimport nuberLogo from \"../images/eats-logo.svg\";\nimport { FormButtonInactivable } from \"../components/form-button-inactivable\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet-async\";\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\nimport { TOKEN_NAME } from \"../gloabl.constant\";\nimport { HelmetOnlyTitle } from \"../components/helmet.onlytitle\";\n\nconst GQL_LOGIN = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      ok\n      error\n      token\n    }\n  }\n`;\n\ntype LoginForm = {\n  email?: string;\n  password?: string;\n};\n\nexport const LoginPage = () => {\n  const { register, handleSubmit, errors, formState } = useForm<LoginForm>({\n    mode: \"onChange\",\n  });\n  const [login, { loading }] = useMutation<\n    LoginMutation,\n    LoginMutationVariables\n  >(GQL_LOGIN, {\n    onCompleted: ({ login: { ok, error, token } }) => {\n      if (ok && token) {\n        toast.success(\"Welcome to nuber-eats\");\n        authTokenVar(token);\n        localStorage.setItem(TOKEN_NAME, token);\n        isLoggedInVar(true);\n      } else {\n        toast.error(error);\n      }\n    },\n  });\n\n  const onSubmit = async ({ email, password }) => {\n    if (!loading) {\n      login({\n        variables: {\n          email,\n          password,\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-screen w-full min-w-scree-sm flex justify-center \">\n      <HelmetOnlyTitle title=\"Welcome to nuber eats\" />\n      <div className=\"h-auto w-full max-w-screen-sm flex flex-col items-center \">\n        <img src={nuberLogo} alt=\"logo\" className=\"w-60 mb-5 mt-10 lg:mt-32\" />\n        <div className=\"bg-white w-full max-h-half h-1/3 max-w-lg text-gray-800 px-10 py-10 rounded-lg text-center\">\n          <h3 className=\"text-3xl font-medium w-full text-left text-gray-800\">\n            Welcome back\n          </h3>\n          <form\n            className=\"flex flex-col mt-2\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <div className=\"flex flex-col\">\n              <input\n                placeholder=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                className=\"auth__form_input\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: \"Email address required.\",\n                  },\n                  pattern: {\n                    value: EMAIL_REGEX,\n                    message: \"Please input email address.\",\n                  },\n                })}\n              />\n              {errors.email?.message ? (\n                <span className=\"auth__form_error\">{errors.email.message}</span>\n              ) : (\n                <span></span>\n              )}\n            </div>\n            <div className=\"flex flex-col\">\n              <input\n                placeholder=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                className=\"auth__form_input\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: \"Password required\",\n                  },\n                })}\n              />\n              {errors.password?.message && (\n                <span className=\"auth__form_error\">\n                  {errors.password.message}\n                </span>\n              )}\n            </div>\n            <FormButtonInactivable\n              loading={loading}\n              isActivate={formState.isValid}\n            >\n              Log in\n            </FormButtonInactivable>\n          </form>\n          <p className=\"mt-4\">\n            New to Nuber?{\" \"}\n            <Link\n              to=\"/create-account\"\n              className=\"text-lime-600 hover:underline font-semibold\"\n            >\n              Create an account.\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/helmet.onlytitle.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.tsx",["139","140"],"export const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/fragments.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/categories.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/category.tsx",[],["141","142"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurant.item.tsx",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":36,"column":46,"nodeType":"149","messageId":"150","endLine":36,"endColumn":51},{"ruleId":"151","severity":1,"message":"152","line":54,"column":6,"nodeType":"153","endLine":54,"endColumn":15,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":71,"column":6,"nodeType":"153","endLine":71,"endColumn":8,"suggestions":"156"},{"ruleId":"147","severity":1,"message":"157","line":58,"column":35,"nodeType":"149","messageId":"150","endLine":58,"endColumn":44},{"ruleId":"147","severity":1,"message":"148","line":59,"column":26,"nodeType":"149","messageId":"150","endLine":59,"endColumn":31},{"ruleId":"147","severity":1,"message":"148","line":44,"column":17,"nodeType":"149","messageId":"150","endLine":44,"endColumn":22},{"ruleId":"147","severity":1,"message":"158","line":14,"column":10,"nodeType":"149","messageId":"150","endLine":14,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":39,"suggestions":"163"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":63,"nodeType":"161","messageId":"162","endLine":1,"endColumn":64,"suggestions":"164"},{"ruleId":"143","replacedBy":"165"},{"ruleId":"145","replacedBy":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'queryParam', and 'queryReadyToStart'. Either include them or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has missing dependencies: 'queryParam' and 'verifyCode'. Either include them or remove the dependency array.",["170"],"'getValues' is assigned a value but never used.","'Helmet' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["171","172"],["173","174"],["167"],["168"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"messageId":"179","fix":"180","desc":"181"},{"messageId":"182","fix":"183","desc":"184"},{"messageId":"179","fix":"185","desc":"181"},{"messageId":"182","fix":"186","desc":"184"},"Update the dependencies array to be: [history, loading, queryParam, queryReadyToStart]",{"range":"187","text":"188"},"Update the dependencies array to be: [queryParam, verifyCode]",{"range":"189","text":"190"},"removeEscape",{"range":"191","text":"192"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"193","text":"194"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"195","text":"192"},{"range":"196","text":"194"},[1467,1476],"[history, loading, queryParam, queryReadyToStart]",[1800,1802],"[queryParam, verifyCode]",[37,38],"",[37,37],"\\",[62,63],[62,62]]