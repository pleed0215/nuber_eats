[{"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx":"1","/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts":"2","/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts":"3","/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx":"4","/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.ts":"5","/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-in-router.tsx":"6","/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-out-router.tsx":"7","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.ts":"8","/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts":"9","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx":"10","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx":"11","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx":"12","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurant.tsx":"13","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/search.tsx":"14","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx":"15","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx":"16","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/category.tsx":"17","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.restaurant.tsx":"18","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurant.tsx":"19","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/me.page.tsx":"20","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/password.page.tsx":"21","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/logout.tsx":"22","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx":"23","/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.ts":"24","/Users/pleed0215/Documents/mystudy/nuber_eats/src/fragments.ts":"25","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.ts":"26","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/helmet.onlytitle.tsx":"27","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx":"28","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurants.tsx":"29","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx":"30","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/categories.tsx":"31","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurant.item.tsx":"32","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/category.tsx":"33","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurants.tsx":"34","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.dish.tsx":"35"},{"size":929,"mtime":1608276074484,"results":"36","hashOfConfig":"37"},{"size":1112,"mtime":1608444050322,"results":"38","hashOfConfig":"37"},{"size":425,"mtime":1608276074485,"results":"39","hashOfConfig":"37"},{"size":401,"mtime":1608344743262,"results":"40","hashOfConfig":"37"},{"size":41,"mtime":1608276074483,"results":"41","hashOfConfig":"37"},{"size":3461,"mtime":1608535089497,"results":"42","hashOfConfig":"37"},{"size":582,"mtime":1608276074482,"results":"43","hashOfConfig":"37"},{"size":283,"mtime":1608276074484,"results":"44","hashOfConfig":"37"},{"size":1231,"mtime":1608611660795,"results":"45","hashOfConfig":"37"},{"size":650,"mtime":1608276074484,"results":"46","hashOfConfig":"37"},{"size":4686,"mtime":1608276074484,"results":"47","hashOfConfig":"37"},{"size":4171,"mtime":1608444609213,"results":"48","hashOfConfig":"37"},{"size":2333,"mtime":1608510629731,"results":"49","hashOfConfig":"37"},{"size":1930,"mtime":1608346952186,"results":"50","hashOfConfig":"37"},{"size":1310,"mtime":1608276074483,"results":"51","hashOfConfig":"37"},{"size":3065,"mtime":1608346939214,"results":"52","hashOfConfig":"37"},{"size":1516,"mtime":1608346926256,"results":"53","hashOfConfig":"37"},{"size":5164,"mtime":1608511761495,"results":"54","hashOfConfig":"37"},{"size":3186,"mtime":1608539298058,"results":"55","hashOfConfig":"37"},{"size":3905,"mtime":1608450998531,"results":"56","hashOfConfig":"37"},{"size":3156,"mtime":1608276074485,"results":"57","hashOfConfig":"37"},{"size":1005,"mtime":1608276074484,"results":"58","hashOfConfig":"37"},{"size":2496,"mtime":1608276074485,"results":"59","hashOfConfig":"37"},{"size":181,"mtime":1608276074485,"results":"60","hashOfConfig":"37"},{"size":613,"mtime":1608518986827,"results":"61","hashOfConfig":"37"},{"size":127,"mtime":1608276074484,"results":"62","hashOfConfig":"37"},{"size":264,"mtime":1608276074483,"results":"63","hashOfConfig":"37"},{"size":363,"mtime":1608276074483,"results":"64","hashOfConfig":"37"},{"size":915,"mtime":1608276074483,"results":"65","hashOfConfig":"37"},{"size":167,"mtime":1608276074483,"results":"66","hashOfConfig":"37"},{"size":681,"mtime":1608276074483,"results":"67","hashOfConfig":"37"},{"size":1110,"mtime":1608510343316,"results":"68","hashOfConfig":"37"},{"size":803,"mtime":1608276074483,"results":"69","hashOfConfig":"37"},{"size":2177,"mtime":1608620046034,"results":"70","hashOfConfig":"37"},{"size":9101,"mtime":1608620648773,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"16nv2t4",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx",[],["147","148"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-in-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/routers/logged-out-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurant.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/search.tsx",["149"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  QuerySearchByTerm,\n  QuerySearchByTermVariables,\n} from \"../../codegen/QuerySearchByTerm\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { Restaurants } from \"../../components/restaurants\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_SEARCH_BY_TERM = gql`\n  query QuerySearchByTerm($term: String!, $page: Int!) {\n    searchRestaurantByName(search: { query: $term, page: $page }) {\n      ok\n      error\n      totalPages\n      countTotalItems\n      restaurants {\n        ...RestaurantPart\n        category {\n          name\n          slug\n        }\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nexport const SearchPage: React.FC = () => {\n  const queryParam = useQueryParam();\n  const history = useHistory();\n  const [term, setTerm] = useState<string | null>(null);\n  const [queryReadyToStart, { loading, data }] = useLazyQuery<\n    QuerySearchByTerm,\n    QuerySearchByTermVariables\n  >(GQL_SEARCH_BY_TERM);\n\n  useEffect(() => {\n    const inputTerm = queryParam.get(\"term\");\n    if (!inputTerm) {\n      history.replace(\"/\");\n    } else {\n      queryReadyToStart({\n        variables: {\n          term: inputTerm,\n          page: 1,\n        },\n      });\n      setTerm(inputTerm);\n    }\n  }, [loading]);\n\n  return (\n    <div>\n      <HelmetOnlyTitle title={`Searching term: \"${term}\"`} />\n      <div className=\"w-full\">\n        {loading ? (\n          <h1>Loading...</h1>\n        ) : (\n          <Restaurants\n            restaurants={data?.searchRestaurantByName.restaurants}\n            categoryShow={true}\n            title={`Searching: \"${term}\" (Found: ${data?.searchRestaurantByName.countTotalItems})`}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/category.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.restaurant.tsx",["150","151"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  MutationCreateRestaurant,\n  MutationCreateRestaurantVariables,\n} from \"../../codegen/MutationCreateRestaurant\";\nimport { FormButtonInactivable } from \"../../components/form-button-inactivable\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport { GQL_MYRESTAURANTS } from \"./my.restaurants\";\n\nconst GQL_CREATE_RESTAURANT = gql`\n  mutation MutationCreateRestaurant($input: CreateRestaurantInput!) {\n    createRestaurant(input: $input) {\n      error\n      ok\n      restaurant {\n        ...RestaurantPart\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\ninterface IForm {\n  name: string;\n  address: string;\n  category: string;\n  file: FileList;\n}\n\nexport const CreateRestaurant = () => {\n  const history = useHistory();\n  const client = useApolloClient();\n\n  const [createRestaurant, { loading, data }] = useMutation<\n    MutationCreateRestaurant,\n    MutationCreateRestaurantVariables\n  >(GQL_CREATE_RESTAURANT, {\n    onCompleted: (data: MutationCreateRestaurant) => {\n      const { ok, error, restaurant } = data.createRestaurant;\n\n      if (ok) {\n        // faking cache\n        const currentQuery = client.readQuery({ query: GQL_MYRESTAURANTS });\n        const fakeData = currentQuery\n          ? {\n              myRestaurants: {\n                ...currentQuery?.myRestaurants,\n                count: currentQuery?.myRestaurants.count + 1,\n                restaurants: [\n                  {\n                    ...restaurant,\n                    __typename: \"Restaurant\",\n                  },\n                  ...currentQuery?.myRestaurants.restaurants,\n                ],\n              },\n            }\n          : {\n              myRestaurants: {\n                __typename: \"MyRestaurantOutput\",\n                ok: true,\n                error: null,\n                count: 1,\n                restaurants: {\n                  ...restaurant,\n                  __typename: \"Restaurant\",\n                },\n              },\n            };\n\n        client.writeQuery({\n          query: GQL_MYRESTAURANTS,\n          data: fakeData,\n        });\n\n        toast.success(\"Your restaurant is successfully made.\");\n      } else {\n        toast.error(\n          `Something is wrong while creating restaurant(Error: ${error})`\n        );\n      }\n      history.push(\"/\");\n    },\n  });\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState,\n    errors,\n  } = useForm<IForm>({\n    mode: \"onChange\",\n  });\n  const onSubmit = async () => {\n    try {\n      const { name, address, category: categoryName, file } = getValues();\n      const actualFile = file[0];\n      const formBody = new FormData();\n      formBody.append(\"file\", actualFile);\n      const { url: coverImage } = await (\n        await fetch(`http://lednas.synology.me:32789/upload/`, {\n          method: \"POST\",\n          body: formBody,\n        })\n      ).json();\n      createRestaurant({\n        variables: {\n          input: {\n            name,\n            address,\n            categoryName,\n            coverImage,\n          },\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"layout__container\">\n      <HelmetOnlyTitle title=\"Creating restaurant\" />\n      <h1 className=\"text-2xl font-semibold my-8\">CreateRestaurant</h1>\n      <form\n        className=\"auth__form\"\n        onSubmit={handleSubmit(onSubmit)}\n        encType=\"multipart/form-data\"\n      >\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            ref={register({ required: \"Name is required\" })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"text\"\n            placeholder=\"Address\"\n            name=\"address\"\n            ref={register({ required: \"Address is required\" })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"text\"\n            placeholder=\"Category\"\n            name=\"category\"\n            ref={register({ required: \"Category is required\" })}\n          />\n        </div>\n        <div className=\"auth__input_wrapper\">\n          <input\n            className=\"auth__form_input\"\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            ref={register({ required: true })}\n          />\n        </div>\n        <FormButtonInactivable\n          isActivate={formState.isValid && !formState.isSubmitting}\n          loading={loading}\n        >\n          Create Restaurant\n        </FormButtonInactivable>\n      </form>\n      {data?.createRestaurant.error && (\n        <p className=\"auth__form_error\">{data.createRestaurant.error}</p>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurant.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/me.page.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/password.page.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/logout.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx",["152"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  MutationVerifyCode,\n  MutationVerifyCodeVariables,\n} from \"../../codegen/MutationVerifyCode\";\nimport { HelmetOnlyTitle } from \"../../components/helmet.onlytitle\";\nimport { useMe } from \"../../hooks/useMe\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_VERIFICATION = gql`\n  mutation MutationVerifyCode($code: String!) {\n    verifyCode(code: $code) {\n      ok\n      error\n    }\n  }\n`;\n\n/* Todo:\n    add sendVerification mutation on backend.\n*/\n\nexport const VerificationPage = () => {\n  const history = useHistory();\n  const onVerifyCompleted = (data: MutationVerifyCode) => {\n    const {\n      verifyCode: { ok },\n    } = data;\n\n    if (ok && userData?.me?.id) {\n      client.writeFragment({\n        id: `User:${userData?.me?.id}`,\n        fragment: gql`\n          fragment VerifiedUser on User {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      toast.success(\"Success to comfirm your verification.\");\n      setTimeout(() => history.push(\"/\"), 2000);\n    } else {\n      toast.error(\"Verification of your email address is not valid.\");\n    }\n  };\n  const [verifyCode, { loading, data, error }] = useMutation<\n    MutationVerifyCode,\n    MutationVerifyCodeVariables\n  >(GQL_VERIFICATION, { onCompleted: onVerifyCompleted });\n\n  const queryParam = useQueryParam();\n  const client = useApolloClient();\n  const { data: userData } = useMe();\n\n  useEffect(() => {\n    const code = queryParam.get(\"code\");\n\n    if (code) {\n      verifyCode({\n        variables: {\n          code,\n        },\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\n      <HelmetOnlyTitle title=\"Verifying your email address\" />\n      {loading ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Confirming your verification.. Please wait..\n        </h1>\n      ) : !error && data?.verifyCode.ok ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Your verification is confirmed. Please log in.\n        </h1>\n      ) : (\n        <div>\n          <h1 className=\"text-lg mb-2 font-medium\">\n            Couldn't confirm your email verification.\n          </h1>\n          <p>Message: {data?.verifyCode.error} </p>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.ts",["153","154"],"export const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/fragments.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/helmet.onlytitle.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/categories.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/restaurant.item.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/category.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/my.restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/restaurant/create.dish.tsx",["155","156","157","158","159","160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":54,"column":6,"nodeType":"167","endLine":54,"endColumn":15,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"173","line":96,"column":5,"nodeType":"171","messageId":"172","endLine":96,"endColumn":11},{"ruleId":"165","severity":1,"message":"174","line":71,"column":6,"nodeType":"167","endLine":71,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":38,"nodeType":"178","messageId":"179","endLine":1,"endColumn":39,"suggestions":"180"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":63,"nodeType":"178","messageId":"179","endLine":1,"endColumn":64,"suggestions":"181"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"182","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":10,"endColumn":45},{"ruleId":"169","severity":1,"message":"183","line":19,"column":10,"nodeType":"171","messageId":"172","endLine":19,"endColumn":23},{"ruleId":"169","severity":1,"message":"184","line":21,"column":10,"nodeType":"171","messageId":"172","endLine":21,"endColumn":27},{"ruleId":"169","severity":1,"message":"185","line":62,"column":39,"nodeType":"171","messageId":"172","endLine":62,"endColumn":44},{"ruleId":"169","severity":1,"message":"173","line":107,"column":5,"nodeType":"171","messageId":"172","endLine":107,"endColumn":11},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'queryParam', and 'queryReadyToStart'. Either include them or remove the dependency array.","ArrayExpression",["188"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'queryParam' and 'verifyCode'. Either include them or remove the dependency array.",["189"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["190","191"],["192","193"],"'MutationCreateDish_createDish_dish_options' is defined but never used.","'useQueryParam' is defined but never used.","'GQL_MYRESTAURANTS' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"messageId":"198","fix":"199","desc":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"198","fix":"204","desc":"200"},{"messageId":"201","fix":"205","desc":"203"},"Update the dependencies array to be: [history, loading, queryParam, queryReadyToStart]",{"range":"206","text":"207"},"Update the dependencies array to be: [queryParam, verifyCode]",{"range":"208","text":"209"},"removeEscape",{"range":"210","text":"211"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"212","text":"213"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"214","text":"211"},{"range":"215","text":"213"},[1460,1469],"[history, loading, queryParam, queryReadyToStart]",[1800,1802],"[queryParam, verifyCode]",[37,38],"",[37,37],"\\",[62,63],[62,62]]