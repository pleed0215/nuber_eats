[{"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx":"1","/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts":"2","/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts":"3","/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx":"4","/Users/pleed0215/Documents/mystudy/nuber_eats/src/Routers/logged-out-router.tsx":"5","/Users/pleed0215/Documents/mystudy/nuber_eats/src/Routers/logged-in-router.tsx":"6","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx":"7","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx":"8","/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.tsx":"9","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx":"10","/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts":"11","/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.tsx":"12","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx":"13","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx":"14","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx":"15","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx":"16","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.tsx":"17","/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx":"18","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.tsx":"19"},{"size":929,"mtime":1607477056079,"results":"20","hashOfConfig":"21"},{"size":1070,"mtime":1607481243003,"results":"22","hashOfConfig":"21"},{"size":425,"mtime":1607468238639,"results":"23","hashOfConfig":"21"},{"size":399,"mtime":1607479598465,"results":"24","hashOfConfig":"21"},{"size":582,"mtime":1607500412508,"results":"25","hashOfConfig":"21"},{"size":1072,"mtime":1607565996200,"results":"26","hashOfConfig":"21"},{"size":4163,"mtime":1607499667979,"results":"27","hashOfConfig":"21"},{"size":4691,"mtime":1607565563990,"results":"28","hashOfConfig":"21"},{"size":181,"mtime":1607468238640,"results":"29","hashOfConfig":"21"},{"size":354,"mtime":1607470660489,"results":"30","hashOfConfig":"21"},{"size":633,"mtime":1607575848902,"results":"31","hashOfConfig":"21"},{"size":41,"mtime":1607476641965,"results":"32","hashOfConfig":"21"},{"size":129,"mtime":1607493916862,"results":"33","hashOfConfig":"21"},{"size":535,"mtime":1607500754163,"results":"34","hashOfConfig":"21"},{"size":1045,"mtime":1607565528457,"results":"35","hashOfConfig":"21"},{"size":167,"mtime":1607513985919,"results":"36","hashOfConfig":"21"},{"size":283,"mtime":1607563309119,"results":"37","hashOfConfig":"21"},{"size":2365,"mtime":1607575088051,"results":"38","hashOfConfig":"21"},{"size":127,"mtime":1607561417220,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"krz1gk",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/pleed0215/Documents/mystudy/nuber_eats/src/index.tsx",[],["82","83"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/apollo.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/reportWebVitals.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/App.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/Routers/logged-out-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/Routers/logged-in-router.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/logint.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/create-account.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/utils.tsx",["84","85"],"export const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/form-button-inactivable.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/codegen/globalTypes.ts",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/gloabl.constant.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/client/restaurants.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/404.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/header.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/components/uberlogo.tsx",[],["86","87"],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useMe.tsx",[],"/Users/pleed0215/Documents/mystudy/nuber_eats/src/pages/user/verification.page.tsx",["88"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  MutationVerifyCode,\n  MutationVerifyCodeVariables,\n} from \"../../codegen/MutationVerifyCode\";\nimport { useMe } from \"../../hooks/useMe\";\nimport { useQueryParam } from \"../../hooks/useQueryParam\";\n\nconst GQL_VERIFICATION = gql`\n  mutation MutationVerifyCode($code: String!) {\n    verifyCode(code: $code) {\n      ok\n      error\n    }\n  }\n`;\n\n/* Todo:\n    add sendVerification mutation on backend.\n*/\n\nexport const VerificationPage = () => {\n  const history = useHistory();\n  const onVerifyCompleted = (data: MutationVerifyCode) => {\n    const {\n      verifyCode: { ok },\n    } = data;\n\n    if (ok && userData?.me?.id) {\n      client.writeFragment({\n        id: userData?.me?.id.toString(),\n        fragment: gql`\n          fragment VerifiedUser on User {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      toast.success(\"Success to comfirm your verification.\");\n      setTimeout(() => history.push(\"/\"), 2000);\n    } else {\n      toast.error(\"Verification of your email address is not valid.\");\n    }\n  };\n  const [verifyCode, { loading, data, error }] = useMutation<\n    MutationVerifyCode,\n    MutationVerifyCodeVariables\n  >(GQL_VERIFICATION, { onCompleted: onVerifyCompleted });\n\n  const queryParam = useQueryParam();\n  const client = useApolloClient();\n  const { data: userData } = useMe();\n\n  useEffect(() => {\n    const code = queryParam.get(\"code\");\n\n    if (code) {\n      verifyCode({\n        variables: {\n          code,\n        },\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\n      {loading ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Confirming your verification.. Please wait..\n        </h1>\n      ) : !error && data?.verifyCode.ok ? (\n        <h1 className=\"text-lg mb-2 font-medium\">\n          Your verification is confirmed. Please log in.\n        </h1>\n      ) : (\n        <div>\n          <h1 className=\"text-lg mb-2 font-medium\">\n            Couldn't confirm your email verification.\n          </h1>\n          <p>Message: {data?.verifyCode.error} </p>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/pleed0215/Documents/mystudy/nuber_eats/src/hooks/useQueryParam.tsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":38,"nodeType":"95","messageId":"96","endLine":1,"endColumn":39,"suggestions":"97"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":63,"nodeType":"95","messageId":"96","endLine":1,"endColumn":64,"suggestions":"98"},{"ruleId":"89","replacedBy":"99"},{"ruleId":"91","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":70,"column":6,"nodeType":"103","endLine":70,"endColumn":8,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["107","108"],["109","110"],["105"],["106"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'queryParam' and 'verifyCode'. Either include them or remove the dependency array.","ArrayExpression",["111"],"no-global-assign","no-unsafe-negation",{"messageId":"112","fix":"113","desc":"114"},{"messageId":"115","fix":"116","desc":"117"},{"messageId":"112","fix":"118","desc":"114"},{"messageId":"115","fix":"119","desc":"117"},{"desc":"120","fix":"121"},"removeEscape",{"range":"122","text":"123"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"124","text":"125"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"126","text":"123"},{"range":"127","text":"125"},"Update the dependencies array to be: [queryParam, verifyCode]",{"range":"128","text":"129"},[37,38],"",[37,37],"\\",[62,63],[62,62],[1732,1734],"[queryParam, verifyCode]"]